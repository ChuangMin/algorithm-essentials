(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{298:function(e,n,t){"use strict";t.d(n,"a",(function(){return m})),t.d(n,"b",(function(){return d}));var r=t(0),i=t.n(r);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=i.a.createContext({}),u=function(e){var n=i.a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},m=function(e){var n=u(e.components);return i.a.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},b=i.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,o=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),m=u(t),b=r,d=m["".concat(o,".").concat(b)]||m[b]||p[b]||a;return t?i.a.createElement(d,l(l({ref:n},s),{},{components:t})):i.a.createElement(d,l({ref:n},s))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,o=new Array(a);o[0]=b;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var s=2;s<a;s++)o[s]=t[s];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"},60:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return l})),t.d(n,"rightToc",(function(){return c})),t.d(n,"default",(function(){return u}));var r=t(2),i=t(6),a=(t(0),t(298)),o={title:"Move Zeroes"},l={unversionedId:"linear-list/array/move-zeroes",id:"linear-list/array/move-zeroes",isDocsHomePage:!1,title:"Move Zeroes",description:"\u63cf\u8ff0",source:"@site/docs/linear-list/array/move-zeroes.md",slug:"/linear-list/array/move-zeroes",permalink:"/algorithm-essentials/linear-list/array/move-zeroes",editUrl:"https://github.com/soulmachine/algorithm-essentials/edit/master/docs/linear-list/array/move-zeroes.md",version:"current",sidebar:"someSidebar",previous:{title:"Remove Element",permalink:"/algorithm-essentials/linear-list/array/remove-element"},next:{title:"Next Permutation",permalink:"/algorithm-essentials/linear-list/array/next-permutation"}},c=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",children:[]},{value:"\u5206\u6790",id:"\u5206\u6790",children:[]},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",children:[]},{value:"\u76f8\u5173\u9898\u76ee",id:"\u76f8\u5173\u9898\u76ee",children:[]}],s={rightToc:c};function u(e){var n=e.components,t=Object(i.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},s,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),Object(a.b)("p",null,"Given an array ",Object(a.b)("inlineCode",{parentName:"p"},"nums"),", write a function to move all 0's to the end of it while maintaining the relative order of the non-zero elements."),Object(a.b)("p",null,"For example, given ",Object(a.b)("inlineCode",{parentName:"p"},"nums = [0, 1, 0, 3, 12]"),", after calling your function, nums should be ",Object(a.b)("inlineCode",{parentName:"p"},"[1, 3, 12, 0, 0]"),"."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Note"),":"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},"You must do this in-place without making a copy of the array."),Object(a.b)("li",{parentName:"ol"},"Minimize the total number of operations.")),Object(a.b)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),Object(a.b)("p",null,'\u8fd9\u9898\u8ddf "Remove Element" \u601d\u8def\u4e00\u6a21\u4e00\u6837\uff0c\u53ea\u662f\u6700\u540e\u8981\u628a\u540e\u534a\u622a\u8bbe\u7f6e\u4e3a 0\u3002'),Object(a.b)("h3",{id:"\u4ee3\u7801"},"\u4ee3\u7801"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"// Move Zeroes\n// Time Complexity: O(n), Space Complexity: O(1)\npublic class Solution {\n    public void moveZeroes(int[] nums) {\n        int index = 0;\n        for (int i = 0; i < nums.length; ++i) {\n            if (nums[i] != 0) {\n                nums[index++] = nums[i];\n            }\n        }\n        for (int i = index; i < nums.length; ++i) {\n            nums[i] = 0;\n        }\n    }\n}\n")),Object(a.b)("h3",{id:"\u76f8\u5173\u9898\u76ee"},"\u76f8\u5173\u9898\u76ee"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object(r.a)({parentName:"li"},{href:"/algorithm-essentials/linear-list/array/remove-element"}),"Remove Element"))))}u.isMDXComponent=!0}}]);