(window.webpackJsonp=window.webpackJsonp||[]).push([[183],{243:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return c})),t.d(n,"metadata",(function(){return p})),t.d(n,"rightToc",(function(){return l})),t.d(n,"default",(function(){return b}));var a=t(2),i=t(7),s=(t(0),t(337)),o=t(341),r=t(342),c={title:"Max Points on a Line"},p={unversionedId:"simulation/max-points-on-a-line",id:"simulation/max-points-on-a-line",isDocsHomePage:!1,title:"Max Points on a Line",description:"\u63cf\u8ff0",source:"@site/docs/simulation/max-points-on-a-line.md",slug:"/simulation/max-points-on-a-line",permalink:"/simulation/max-points-on-a-line",editUrl:"https://github.com/soulmachine/algorithm-essentials/edit/master/docs/simulation/max-points-on-a-line.md",version:"current",sidebar:"someSidebar",previous:{title:"Text Justification",permalink:"/simulation/text-justification"},next:{title:"Sparse Matrix Multiplication",permalink:"/simulation/sparse-matrix-multiplication"}},l=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",children:[]},{value:"\u5206\u6790",id:"\u5206\u6790",children:[]},{value:"\u4ee5\u8fb9\u4e3a\u4e2d\u5fc3",id:"\u4ee5\u8fb9\u4e3a\u4e2d\u5fc3",children:[]},{value:"\u4ee5\u70b9\u4e3a\u4e2d\u5fc3",id:"\u4ee5\u70b9\u4e3a\u4e2d\u5fc3",children:[]}],m={rightToc:l};function b(e){var n=e.components,t=Object(i.a)(e,["components"]);return Object(s.b)("wrapper",Object(a.a)({},m,t,{components:n,mdxType:"MDXLayout"}),Object(s.b)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),Object(s.b)("p",null,"Given ",Object(s.b)("inlineCode",{parentName:"p"},"n")," points on a 2D plane, find the maximum number of points that lie on the same straight line."),Object(s.b)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),Object(s.b)("p",null,"\u66b4\u529b\u679a\u4e3e\u6cd5\u3002\u4e24\u70b9\u51b3\u5b9a\u4e00\u6761\u76f4\u7ebf\uff0c",Object(s.b)("inlineCode",{parentName:"p"},"n"),"\u4e2a\u70b9\u4e24\u4e24\u7ec4\u5408\uff0c\u53ef\u4ee5\u5f97\u5230",Object(s.b)("span",Object(a.a)({parentName:"p"},{className:"math math-inline"}),Object(s.b)("span",Object(a.a)({parentName:"span"},{className:"katex"}),Object(s.b)("span",Object(a.a)({parentName:"span"},{className:"katex-mathml"}),Object(s.b)("math",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/1998/Math/MathML"}),Object(s.b)("semantics",{parentName:"math"},Object(s.b)("mrow",{parentName:"semantics"},Object(s.b)("mstyle",Object(a.a)({parentName:"mrow"},{displaystyle:"true",scriptlevel:"0"}),Object(s.b)("mfrac",{parentName:"mstyle"},Object(s.b)("mn",{parentName:"mfrac"},"1"),Object(s.b)("mn",{parentName:"mfrac"},"2"))),Object(s.b)("mi",{parentName:"mrow"},"n"),Object(s.b)("mo",Object(a.a)({parentName:"mrow"},{stretchy:"false"}),"("),Object(s.b)("mi",{parentName:"mrow"},"n"),Object(s.b)("mo",{parentName:"mrow"},"+"),Object(s.b)("mn",{parentName:"mrow"},"1"),Object(s.b)("mo",Object(a.a)({parentName:"mrow"},{stretchy:"false"}),")")),Object(s.b)("annotation",Object(a.a)({parentName:"semantics"},{encoding:"application/x-tex"}),"\\dfrac{1}{2}n(n+1)")))),Object(s.b)("span",Object(a.a)({parentName:"span"},{className:"katex-html","aria-hidden":"true"}),Object(s.b)("span",Object(a.a)({parentName:"span"},{className:"base"}),Object(s.b)("span",Object(a.a)({parentName:"span"},{className:"strut",style:{height:"2.00744em",verticalAlign:"-0.686em"}})),Object(s.b)("span",Object(a.a)({parentName:"span"},{className:"mord"}),Object(s.b)("span",Object(a.a)({parentName:"span"},{className:"mopen nulldelimiter"})),Object(s.b)("span",Object(a.a)({parentName:"span"},{className:"mfrac"}),Object(s.b)("span",Object(a.a)({parentName:"span"},{className:"vlist-t vlist-t2"}),Object(s.b)("span",Object(a.a)({parentName:"span"},{className:"vlist-r"}),Object(s.b)("span",Object(a.a)({parentName:"span"},{className:"vlist",style:{height:"1.32144em"}}),Object(s.b)("span",Object(a.a)({parentName:"span"},{style:{top:"-2.314em"}}),Object(s.b)("span",Object(a.a)({parentName:"span"},{className:"pstrut",style:{height:"3em"}})),Object(s.b)("span",Object(a.a)({parentName:"span"},{className:"mord"}),Object(s.b)("span",Object(a.a)({parentName:"span"},{className:"mord"}),"2"))),Object(s.b)("span",Object(a.a)({parentName:"span"},{style:{top:"-3.23em"}}),Object(s.b)("span",Object(a.a)({parentName:"span"},{className:"pstrut",style:{height:"3em"}})),Object(s.b)("span",Object(a.a)({parentName:"span"},{className:"frac-line",style:{borderBottomWidth:"0.04em"}}))),Object(s.b)("span",Object(a.a)({parentName:"span"},{style:{top:"-3.677em"}}),Object(s.b)("span",Object(a.a)({parentName:"span"},{className:"pstrut",style:{height:"3em"}})),Object(s.b)("span",Object(a.a)({parentName:"span"},{className:"mord"}),Object(s.b)("span",Object(a.a)({parentName:"span"},{className:"mord"}),"1")))),Object(s.b)("span",Object(a.a)({parentName:"span"},{className:"vlist-s"}),"\u200b")),Object(s.b)("span",Object(a.a)({parentName:"span"},{className:"vlist-r"}),Object(s.b)("span",Object(a.a)({parentName:"span"},{className:"vlist",style:{height:"0.686em"}}),Object(s.b)("span",{parentName:"span"}))))),Object(s.b)("span",Object(a.a)({parentName:"span"},{className:"mclose nulldelimiter"}))),Object(s.b)("span",Object(a.a)({parentName:"span"},{className:"mord mathnormal"}),"n"),Object(s.b)("span",Object(a.a)({parentName:"span"},{className:"mopen"}),"("),Object(s.b)("span",Object(a.a)({parentName:"span"},{className:"mord mathnormal"}),"n"),Object(s.b)("span",Object(a.a)({parentName:"span"},{className:"mspace",style:{marginRight:"0.2222222222222222em"}})),Object(s.b)("span",Object(a.a)({parentName:"span"},{className:"mbin"}),"+"),Object(s.b)("span",Object(a.a)({parentName:"span"},{className:"mspace",style:{marginRight:"0.2222222222222222em"}}))),Object(s.b)("span",Object(a.a)({parentName:"span"},{className:"base"}),Object(s.b)("span",Object(a.a)({parentName:"span"},{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}})),Object(s.b)("span",Object(a.a)({parentName:"span"},{className:"mord"}),"1"),Object(s.b)("span",Object(a.a)({parentName:"span"},{className:"mclose"}),")"))))),"\u6761\u76f4\u7ebf\uff0c\u5bf9\u6bcf\u4e00\u6761\u76f4\u7ebf\uff0c\u5224\u65ad",Object(s.b)("inlineCode",{parentName:"p"},"n"),"\u4e2a\u70b9\u662f\u5426\u5728\u8be5\u76f4\u7ebf\u4e0a\uff0c\u4ece\u800c\u53ef\u4ee5\u5f97\u5230\u8fd9\u6761\u76f4\u7ebf\u4e0a\u7684\u70b9\u7684\u4e2a\u6570\uff0c\u9009\u62e9\u6700\u5927\u7684\u90a3\u6761\u76f4\u7ebf\u8fd4\u56de\u3002\u590d\u6742\u5ea6",Object(s.b)("inlineCode",{parentName:"p"},"O(n^3)"),"\u3002"),Object(s.b)("p",null,"\u4e0a\u9762\u7684\u66b4\u529b\u679a\u4e3e\u6cd5\u4ee5\u201c\u8fb9\u201d\u4e3a\u4e2d\u5fc3\uff0c\u518d\u770b\u53e6\u4e00\u79cd\u66b4\u529b\u679a\u4e3e\u6cd5\uff0c\u4ee5\u6bcf\u4e2a\u201c\u70b9\u201d\u4e3a\u4e2d\u5fc3\uff0c\u7136\u540e\u904d\u5386\u5269\u4f59\u70b9\uff0c\u627e\u5230\u6240\u6709\u7684\u659c\u7387\uff0c\u5982\u679c\u659c\u7387\u76f8\u540c\uff0c\u90a3\u4e48\u4e00\u5b9a\u5171\u7ebf\u5bf9\u6bcf\u4e2a\u70b9\uff0c\u7528\u4e00\u4e2a\u54c8\u5e0c\u8868\uff0ckey \u4e3a\u659c\u7387\uff0cvalue \u4e3a\u8be5\u76f4\u7ebf\u4e0a\u7684\u70b9\u6570\uff0c\u8ba1\u7b97\u51fa\u54c8\u5e0c\u8868\u540e\uff0c\u53d6\u6700\u5927\u503c\uff0c\u5e76\u66f4\u65b0\u5168\u5c40\u6700\u5927\u503c\uff0c\u6700\u540e\u5c31\u662f\u7ed3\u679c\u3002\u65f6\u95f4\u590d\u6742\u5ea6",Object(s.b)("inlineCode",{parentName:"p"},"O(n^2)"),"\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6",Object(s.b)("inlineCode",{parentName:"p"},"O(n)"),"\u3002"),Object(s.b)("h3",{id:"\u4ee5\u8fb9\u4e3a\u4e2d\u5fc3"},"\u4ee5\u8fb9\u4e3a\u4e2d\u5fc3"),Object(s.b)(o.a,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},Object(s.b)(r.a,{value:"java",mdxType:"TabItem"},Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"// Max Points on a Line\n// \u66b4\u529b\u679a\u4e3e\u6cd5\uff0c\u4ee5\u8fb9\u4e3a\u4e2d\u5fc3\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(n^3)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(1)\npublic class Solution {\n    public int maxPoints(Point[] points) {\n        if (points.length < 3) return points.length;\n        int result = 0;\n\n        for (int i = 0; i < points.length - 1; i++) {\n            for (int j = i + 1; j < points.length; j++) {\n                int sign = 0;\n                int a = 0, b = 0, c = 0;\n                if (points[i].x == points[j].x) sign = 1;\n                else {\n                    a = points[j].x - points[i].x;\n                    b = points[j].y - points[i].y;\n                    c = a * points[i].y - b * points[i].x;\n                }\n                int count = 0;\n                for (int k = 0; k < points.length; k++) {\n                    if ((0 == sign && a * points[k].y == c +  b * points[k].x) ||\n                            (1 == sign&&points[k].x == points[j].x))\n                        count++;\n                }\n                if (count > result) result = count;\n            }\n        }\n        return result;\n    }\n}\n"))),Object(s.b)(r.a,{value:"cpp",mdxType:"TabItem"},Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-cpp"}),"// Max Points on a Line\n// \u66b4\u529b\u679a\u4e3e\u6cd5\uff0c\u4ee5\u8fb9\u4e3a\u4e2d\u5fc3\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(n^3)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(1)\nclass Solution {\npublic:\n    int maxPoints(vector<Point> &points) {\n        if (points.size() < 3) return points.size();\n        int result = 0;\n\n        for (int i = 0; i < points.size() - 1; i++) {\n            for (int j = i + 1; j < points.size(); j++) {\n                int sign = 0;\n                int a, b, c;\n                if (points[i].x == points[j].x) sign = 1;\n                else {\n                    a = points[j].x - points[i].x;\n                    b = points[j].y - points[i].y;\n                    c = a * points[i].y - b * points[i].x;\n                }\n                int count = 0;\n                for (int k = 0; k < points.size(); k++) {\n                    if ((0 == sign && a * points[k].y == c +  b * points[k].x) ||\n                        (1 == sign&&points[k].x == points[j].x))\n                        count++;\n                }\n                if (count > result) result = count;\n            }\n        }\n        return result;\n    }\n};\n")))),Object(s.b)("h3",{id:"\u4ee5\u70b9\u4e3a\u4e2d\u5fc3"},"\u4ee5\u70b9\u4e3a\u4e2d\u5fc3"),Object(s.b)(o.a,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},Object(s.b)(r.a,{value:"java",mdxType:"TabItem"},Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"// Max Points on a Line\n// \u66b4\u529b\u679a\u4e3e\uff0c\u4ee5\u70b9\u4e3a\u4e2d\u5fc3\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(n^2)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n^2)\npublic class Solution {\n    public int maxPoints(Point[] points) {\n        if (points.length < 3) return points.length;\n        int result = 0;\n\n        HashMap<Double, Integer> slope_count = new HashMap<>();\n        for (int i = 0; i < points.length-1; i++) {\n            slope_count.clear();\n            int samePointNum = 0; // \u4e0ei\u91cd\u5408\u7684\u70b9\n            int point_max = 1;    // \u548ci\u5171\u7ebf\u7684\u6700\u5927\u70b9\u6570\n\n            for (int j = i + 1; j < points.length; j++) {\n                final double slope; // \u659c\u7387\n                if (points[i].x == points[j].x) {\n                    slope = Double.POSITIVE_INFINITY;\n                    if (points[i].y == points[j].y) {\n                        ++ samePointNum;\n                        continue;\n                    }\n                } else {\n                    if (points[i].y == points[j].y) {\n                        // 0.0 and -0.0 is the same\n                        slope = 0.0;\n                    } else {\n                        slope = 1.0 * (points[i].y - points[j].y) /\n                                (points[i].x - points[j].x);\n                    }\n                }\n\n                int count = 0;\n                if (slope_count.containsKey(slope)) {\n                    final int tmp = slope_count.get(slope);\n                    slope_count.put(slope, tmp + 1);\n                    count = tmp + 1;\n                } else {\n                    count = 2;\n                    slope_count.put(slope, 2);\n                }\n\n                if (point_max < count) point_max = count;\n            }\n            result = Math.max(result, point_max + samePointNum);\n        }\n        return result;\n    }\n}\n"))),Object(s.b)(r.a,{value:"cpp",mdxType:"TabItem"},Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-cpp"}),"// Max Points on a Line\n// \u66b4\u529b\u679a\u4e3e\uff0c\u4ee5\u70b9\u4e3a\u4e2d\u5fc3\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(n^2)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n^2)\nclass Solution {\npublic:\n    int maxPoints(vector<Point> &points) {\n        if (points.size() < 3) return points.size();\n        int result = 0;\n\n        unordered_map<double, int> slope_count;\n        for (int i = 0; i < points.size()-1; i++) {\n            slope_count.clear();\n            int samePointNum = 0; // \u4e0ei\u91cd\u5408\u7684\u70b9\n            int point_max = 1;    // \u548ci\u5171\u7ebf\u7684\u6700\u5927\u70b9\u6570\n\n            for (int j = i + 1; j < points.size(); j++) {\n                double slope; // \u659c\u7387\n                if (points[i].x == points[j].x) {\n                    slope = std::numeric_limits<double>::infinity();\n                    if (points[i].y == points[j].y) {\n                        ++ samePointNum;\n                        continue;\n                    }\n                } else {\n                    if (points[i].y == points[j].y) {\n                        // 0.0 and -0.0 is the same\n                        slope = 0.0;\n                    } else {\n                        slope = 1.0 * (points[i].y - points[j].y) /\n                                (points[i].x - points[j].x);\n                    }\n                }\n\n                int count = 0;\n                if (slope_count.find(slope) != slope_count.end())\n                    count = ++slope_count[slope];\n                else {\n                    count = 2;\n                    slope_count[slope] = 2;\n                }\n\n                if (point_max < count) point_max = count;\n            }\n            result = max(result, point_max + samePointNum);\n        }\n        return result;\n    }\n};\n")))))}b.isMDXComponent=!0},337:function(e,n,t){"use strict";t.d(n,"a",(function(){return m})),t.d(n,"b",(function(){return j}));var a=t(0),i=t.n(a);function s(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){s(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},s=Object.keys(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=i.a.createContext({}),l=function(e){var n=i.a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},m=function(e){var n=l(e.components);return i.a.createElement(p.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},u=i.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,s=e.originalType,o=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=l(t),u=a,j=m["".concat(o,".").concat(u)]||m[u]||b[u]||s;return t?i.a.createElement(j,r(r({ref:n},p),{},{components:t})):i.a.createElement(j,r({ref:n},p))}));function j(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var s=t.length,o=new Array(s);o[0]=u;var r={};for(var c in n)hasOwnProperty.call(n,c)&&(r[c]=n[c]);r.originalType=e,r.mdxType="string"==typeof e?e:a,o[1]=r;for(var p=2;p<s;p++)o[p]=t[p];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},338:function(e,n,t){"use strict";function a(e){var n,t,i="";if("string"==typeof e||"number"==typeof e)i+=e;else if("object"==typeof e)if(Array.isArray(e))for(n=0;n<e.length;n++)e[n]&&(t=a(e[n]))&&(i&&(i+=" "),i+=t);else for(n in e)e[n]&&(i&&(i+=" "),i+=n);return i}n.a=function(){for(var e,n,t=0,i="";t<arguments.length;)(e=arguments[t++])&&(n=a(e))&&(i&&(i+=" "),i+=n);return i}},339:function(e,n,t){"use strict";var a=t(0),i=t(340);n.a=function(){var e=Object(a.useContext)(i.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},340:function(e,n,t){"use strict";var a=t(0),i=Object(a.createContext)(void 0);n.a=i},341:function(e,n,t){"use strict";var a=t(0),i=t.n(a),s=t(339),o=t(338),r=t(49),c=t.n(r),p=37,l=39;n.a=function(e){var n=e.block,t=e.children,r=e.defaultValue,m=e.values,b=e.groupId,u=e.className,j=Object(s.a)(),O=j.tabGroupChoices,f=j.setTabGroupChoices,d=Object(a.useState)(r),N=d[0],y=d[1],v=Object(a.useState)(!1),h=v[0],x=v[1];if(null!=b){var g=O[b];null!=g&&g!==N&&m.some((function(e){return e.value===g}))&&y(g)}var w=function(e){y(e),null!=b&&f(b,e)},P=[],k=function(e){e.metaKey||e.altKey||e.ctrlKey||x(!0)},_=function(){x(!1)};return Object(a.useEffect)((function(){return window.addEventListener("keydown",k),window.addEventListener("mousedown",_),function(){window.removeEventListener("keydown",k),window.removeEventListener("mousedown",_)}}),[]),i.a.createElement("div",null,i.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(o.a)("tabs",{"tabs--block":n},u)},m.map((function(e){var n=e.value,t=e.label;return i.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":N===n,className:Object(o.a)("tabs__item",c.a.tabItem,{"tabs__item--active":N===n}),style:h?{}:{outline:"none"},key:n,ref:function(e){return P.push(e)},onKeyDown:function(e){!function(e,n,t){switch(t.keyCode){case l:!function(e,n){var t=e.indexOf(n)+1;e[t]?e[t].focus():e[0].focus()}(e,n);break;case p:!function(e,n){var t=e.indexOf(n)-1;e[t]?e[t].focus():e[e.length-1].focus()}(e,n)}}(P,e.target,e),k(e)},onFocus:function(){return w(n)},onClick:function(){w(n),x(!1)},onPointerDown:function(){return x(!1)}},t)}))),i.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},a.Children.toArray(t).filter((function(e){return e.props.value===N}))[0]))}},342:function(e,n,t){"use strict";var a=t(0),i=t.n(a);n.a=function(e){return i.a.createElement("div",null,e.children)}}}]);