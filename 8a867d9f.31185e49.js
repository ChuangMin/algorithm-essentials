(window.webpackJsonp=window.webpackJsonp||[]).push([[142],{202:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return u})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return p}));var r=n(2),a=n(7),i=(n(0),n(307)),o=n(311),s=n(312),c={title:"Letter Combinations of a Phone Number"},u={unversionedId:"brute-force/letter-combinations-of-a-phone-number",id:"brute-force/letter-combinations-of-a-phone-number",isDocsHomePage:!1,title:"Letter Combinations of a Phone Number",description:"\u63cf\u8ff0",source:"@site/docs/brute-force/letter-combinations-of-a-phone-number.md",slug:"/brute-force/letter-combinations-of-a-phone-number",permalink:"/brute-force/letter-combinations-of-a-phone-number",editUrl:"https://github.com/soulmachine/algorithm-essentials/edit/master/docs/brute-force/letter-combinations-of-a-phone-number.md",version:"current"},l=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",children:[]},{value:"\u5206\u6790",id:"\u5206\u6790",children:[]},{value:"\u9012\u5f52",id:"\u9012\u5f52",children:[]},{value:"\u8fed\u4ee3",id:"\u8fed\u4ee3",children:[]}],b={rightToc:l};function p(e){var t=e.components,c=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},b,c,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),Object(i.b)("p",null,"Given a digit string, return all possible letter combinations that the number could represent."),Object(i.b)("p",null,"A mapping of digit to letters (just like on the telephone buttons) is given below."),Object(i.b)("p",null,Object(i.b)("img",{alt:"Phone Keyboard",src:n(324).default})),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Input:"),"Digit string ",Object(i.b)("inlineCode",{parentName:"p"},'"23"')),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Output:")," ",Object(i.b)("inlineCode",{parentName:"p"},'["ad", "ae", "af", "bd", "be", "bf", "cd", "ce", "cf"]'),"."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Note:"),"\nAlthough the above answer is in lexicographical order, your answer could be in any order you want."),Object(i.b)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),Object(i.b)("p",null,"\u65e0"),Object(i.b)("h3",{id:"\u9012\u5f52"},"\u9012\u5f52"),Object(i.b)(o.a,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},Object(i.b)(s.a,{value:"java",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),'// Letter Combinations of a Phone Number\n// \u65f6\u95f4\u590d\u6742\u5ea6O(3^n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n)\npublic class Solution {\n    private static final String[] keyboard =\n            new String[]{ " ", "", "abc", "def", // \'0\',\'1\',\'2\',...\n            "ghi", "jkl", "mno", "pqrs", "tuv", "wxyz" };\n\n    public List<String> letterCombinations(String digits) {\n        List<String> result = new ArrayList<>();\n        if (digits.isEmpty()) return result;\n        dfs(digits, 0, "", result);\n        return result;\n    }\n\n    private static void dfs(String digits, int cur, String path,\n                            List<String> result) {\n        if (cur == digits.length()) {\n            result.add(path);\n            return;\n        }\n        final String str = keyboard[digits.charAt(cur) - \'0\'];\n\n        for (char c : keyboard[digits.charAt(cur) - \'0\'].toCharArray()) {\n            dfs(digits, cur + 1, path + c, result);\n        }\n    }\n}\n'))),Object(i.b)(s.a,{value:"cpp",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-cpp"}),'// Letter Combinations of a Phone Number\n// \u65f6\u95f4\u590d\u6742\u5ea6O(3^n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n)\nclass Solution {\npublic:\n    const vector<string> keyboard { " ", "", "abc", "def", // \'0\',\'1\',\'2\',...\n            "ghi", "jkl", "mno", "pqrs", "tuv", "wxyz" };\n\n    vector<string> letterCombinations (const string &digits) {\n        vector<string> result;\n        if (digits.empty()) return result;\n        dfs(digits, 0, "", result);\n        return result;\n    }\n\n    void dfs(const string &digits, size_t cur, string path,\n            vector<string> &result) {\n        if (cur == digits.size()) {\n            result.push_back(path);\n            return;\n        }\n        for (auto c : keyboard[digits[cur] - \'0\']) {\n            dfs(digits, cur + 1, path + c, result);\n        }\n    }\n};\n')))),Object(i.b)("h3",{id:"\u8fed\u4ee3"},"\u8fed\u4ee3"),Object(i.b)(o.a,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},Object(i.b)(s.a,{value:"java",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),'// Letter Combinations of a Phone Number\n// \u65f6\u95f4\u590d\u6742\u5ea6O(3^n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(1)\npublic class Solution {\n    private static final String[] keyboard =\n            new String[]{ " ", "", "abc", "def", // \'0\',\'1\',\'2\',...\n                    "ghi", "jkl", "mno", "pqrs", "tuv", "wxyz" };\n\n    public List<String> letterCombinations(String digits) {\n        if (digits.isEmpty()) return new ArrayList<>();\n        List<String> result = new ArrayList<>();\n        result.add("");\n        for (char d : digits.toCharArray()) {\n            final int n = result.size();\n            final int m = keyboard[d - \'0\'].length();\n\n            // resize to n * m\n            for (int i = 1; i < m; ++i) {\n                for (int j = 0; j < n; ++j) {\n                    result.add(result.get(j));\n                }\n            }\n\n            for (int i = 0; i < result.size(); ++i) {\n                result.set(i, result.get(i) + keyboard[d - \'0\'].charAt(i/n));\n            }\n        }\n        return result;\n    }\n}\n'))),Object(i.b)(s.a,{value:"cpp",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-cpp"}),'// Letter Combinations of a Phone Number\n// \u65f6\u95f4\u590d\u6742\u5ea6O(3^n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(1)\nclass Solution {\npublic:\n    const vector<string> keyboard { " ", "", "abc", "def", // \'0\',\'1\',\'2\',...\n            "ghi", "jkl", "mno", "pqrs", "tuv", "wxyz" };\n\n    vector<string> letterCombinations (const string &digits) {\n        if (digits.empty()) return vector<string>();\n        vector<string> result(1, "");\n        for (auto d : digits) {\n            const size_t n = result.size();\n            const size_t m = keyboard[d - \'0\'].size();\n\n            // resize to n * m\n            for (size_t i = 1; i < m; ++i) {\n                for (size_t j = 0; j < n; ++j) {\n                    result.push_back(result[j]);\n                }\n            }\n\n            for (size_t i = 0; i < result.size(); ++i) {\n                result[i] = result[i] + keyboard[d - \'0\'][i/n];\n            }\n        }\n        return result;\n    }\n};\n')))))}p.isMDXComponent=!0},307:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return f}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=a.a.createContext({}),l=function(e){var t=a.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},b=function(e){var t=l(e.components);return a.a.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),b=l(n),d=r,f=b["".concat(o,".").concat(d)]||b[d]||p[d]||i;return n?a.a.createElement(f,s(s({ref:t},u),{},{components:n})):a.a.createElement(f,s({ref:t},u))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var u=2;u<i;u++)o[u]=n[u];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},308:function(e,t,n){"use strict";function r(e){var t,n,a="";if("string"==typeof e||"number"==typeof e)a+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=r(e[t]))&&(a&&(a+=" "),a+=n);else for(t in e)e[t]&&(a&&(a+=" "),a+=t);return a}t.a=function(){for(var e,t,n=0,a="";n<arguments.length;)(e=arguments[n++])&&(t=r(e))&&(a&&(a+=" "),a+=t);return a}},309:function(e,t,n){"use strict";var r=n(0);const a=Object(r.createContext)(void 0);t.a=a},310:function(e,t,n){"use strict";var r=n(0),a=n(309);t.a=function(){const e=Object(r.useContext)(a.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},311:function(e,t,n){"use strict";var r=n(0),a=n.n(r),i=n(310),o=n(308),s=n(49),c=n.n(s);const u=37,l=39;t.a=function(e){const{block:t,children:n,defaultValue:s,values:b,groupId:p}=e,{tabGroupChoices:d,setTabGroupChoices:f}=Object(i.a)(),[m,g]=Object(r.useState)(s),[v,y]=Object(r.useState)(!1);if(null!=p){const e=d[p];null!=e&&e!==m&&b.some((t=>t.value===e))&&g(e)}const j=e=>{g(e),null!=p&&f(p,e)},O=[],h=e=>{e.metaKey||e.altKey||e.ctrlKey||y(!0)},w=()=>{y(!1)};return Object(r.useEffect)((()=>{window.addEventListener("keydown",h),window.addEventListener("mousedown",w)}),[]),a.a.createElement("div",null,a.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(o.a)("tabs",{"tabs--block":t})},b.map((({value:e,label:t})=>a.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":m===e,className:Object(o.a)("tabs__item",c.a.tabItem,{"tabs__item--active":m===e}),style:v?{}:{outline:"none"},key:e,ref:e=>O.push(e),onKeyDown:e=>{((e,t,n)=>{switch(n.keyCode){case l:((e,t)=>{const n=e.indexOf(t)+1;e[n]?e[n].focus():e[0].focus()})(e,t);break;case u:((e,t)=>{const n=e.indexOf(t)-1;e[n]?e[n].focus():e[e.length-1].focus()})(e,t)}})(O,e.target,e),h(e)},onFocus:()=>j(e),onClick:()=>{j(e),y(!1)},onPointerDown:()=>y(!1)},t)))),a.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},r.Children.toArray(n).filter((e=>e.props.value===m))[0]))}},312:function(e,t,n){"use strict";var r=n(0),a=n.n(r);t.a=function(e){return a.a.createElement("div",null,e.children)}},324:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/phone-keyboard-a697160e29404c1c63994256f357ab55.png"}}]);