(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{144:function(n,e,t){"use strict";t.r(e),t.d(e,"frontMatter",(function(){return l})),t.d(e,"metadata",(function(){return c})),t.d(e,"rightToc",(function(){return u})),t.d(e,"default",(function(){return f}));var r=t(2),i=t(7),a=(t(0),t(333)),o=t(337),s=t(338),l={title:"N-Queens"},c={unversionedId:"dfs/n-queens",id:"dfs/n-queens",isDocsHomePage:!1,title:"N-Queens",description:"\u63cf\u8ff0",source:"@site/docs/dfs/n-queens.md",slug:"/dfs/n-queens",permalink:"/dfs/n-queens",editUrl:"https://github.com/soulmachine/algorithm-essentials/edit/master/docs/dfs/n-queens.md",version:"current",sidebar:"someSidebar",previous:{title:"Unique Paths II",permalink:"/dfs/unique-paths-ii"},next:{title:"N-Queens II",permalink:"/dfs/n-queens-ii"}},u=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",children:[]},{value:"\u5206\u6790",id:"\u5206\u6790",children:[]},{value:"\u4ee3\u7801 1",id:"\u4ee3\u7801-1",children:[]},{value:"\u4ee3\u7801 2",id:"\u4ee3\u7801-2",children:[]},{value:"\u76f8\u5173\u9898\u76ee",id:"\u76f8\u5173\u9898\u76ee",children:[]}],b={rightToc:u};function f(n){var e=n.components,l=Object(i.a)(n,["components"]);return Object(a.b)("wrapper",Object(r.a)({},b,l,{components:e,mdxType:"MDXLayout"}),Object(a.b)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),Object(a.b)("p",null,"The ",Object(a.b)("strong",{parentName:"p"},"n-queens puzzle")," is the problem of placing n queens on an ",Object(a.b)("inlineCode",{parentName:"p"},"n \xd7 n")," chessboard such that no two queens attack each other."),Object(a.b)("p",null,Object(a.b)("img",{alt:"Eight Queens",src:t(397).default})),Object(a.b)("p",null,"Given an integer ",Object(a.b)("inlineCode",{parentName:"p"},"n"),", return all distinct solutions to the n-queens puzzle."),Object(a.b)("p",null,"Each solution contains a distinct board configuration of the n-queens' placement, where ",Object(a.b)("inlineCode",{parentName:"p"},"'Q'")," and ",Object(a.b)("inlineCode",{parentName:"p"},"'.'")," both indicate a queen and an empty space respectively."),Object(a.b)("p",null,"For example,\nThere exist two distinct solutions to the 4-queens puzzle:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{}),'[\n [".Q..",  // Solution 1\n  "...Q",\n  "Q...",\n  "..Q."],\n\n ["..Q.",  // Solution 2\n  "Q...",\n  "...Q",\n  ".Q.."]\n]\n')),Object(a.b)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),Object(a.b)("p",null,"\u7ecf\u5178\u7684\u6df1\u641c\u9898\u3002"),Object(a.b)("p",null,"\u8bbe\u7f6e\u4e00\u4e2a\u6570\u7ec4 ",Object(a.b)("inlineCode",{parentName:"p"},"vector<int> C(n, 0)"),", ",Object(a.b)("inlineCode",{parentName:"p"},"C[i]")," \u8868\u793a\u7b2c i \u884c\u7687\u540e\u6240\u5728\u7684\u5217\u7f16\u53f7\uff0c\u5373\u5728\u4f4d\u7f6e ",Object(a.b)("inlineCode",{parentName:"p"},"(i, C[i])"),"\u4e0a\u653e\u4e86\u4e00\u4e2a\u7687\u540e\uff0c\u8fd9\u6837\u7528\u4e00\u4e2a\u4e00\u7ef4\u6570\u7ec4\uff0c\u5c31\u80fd\u8bb0\u5f55\u6574\u4e2a\u68cb\u76d8\u3002"),Object(a.b)("h3",{id:"\u4ee3\u7801-1"},"\u4ee3\u7801 1"),Object(a.b)(o.a,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},Object(a.b)(s.a,{value:"java",mdxType:"TabItem"},Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"// N-Queens\n// \u6df1\u641c+\u526a\u679d\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n!*n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n)\npublic class Solution {\n    public List<List<String>> solveNQueens(int n) {\n        List<List<String>> result = new ArrayList<>();\n        int[] C = new int[n]; // C[i]\u8868\u793a\u7b2ci\u884c\u7687\u540e\u6240\u5728\u7684\u5217\u7f16\u53f7\n        dfs(C, 0, result);\n        return result;\n    }\n    private static void dfs(int[] C, int row, List<List<String>> result) {\n        final int N = C.length;\n        if (row == N) { // \u7ec8\u6b62\u6761\u4ef6\uff0c\u4e5f\u662f\u6536\u655b\u6761\u4ef6\uff0c\u610f\u5473\u7740\u627e\u5230\u4e86\u4e00\u4e2a\u53ef\u884c\u89e3\n            List<String> solution = new ArrayList<>();\n            for (int i = 0; i < N; ++i) {\n                char[] charArray = new char[N];\n                Arrays.fill(charArray, '.');\n                for (int j = 0; j < N; ++j) {\n                    if (j == C[i]) charArray[j] = 'Q';\n                }\n                solution.add(new String(charArray));\n            }\n            result.add(solution);\n            return;\n        }\n\n        for (int j = 0; j < N; ++j) {  // \u6269\u5c55\u72b6\u6001\uff0c\u4e00\u5217\u4e00\u5217\u7684\u8bd5\n            final boolean ok = isValid(C, row, j);\n            if (!ok) continue;  // \u526a\u679d\uff0c\u5982\u679c\u975e\u6cd5\uff0c\u7ee7\u7eed\u5c1d\u8bd5\u4e0b\u4e00\u5217\n            // \u6267\u884c\u6269\u5c55\u52a8\u4f5c\n            C[row] = j;\n            dfs(C, row + 1, result);\n            // \u64a4\u9500\u52a8\u4f5c\n            // C[row] = -1;\n        }\n    }\n\n    /**\n     * \u80fd\u5426\u5728 (row, col) \u4f4d\u7f6e\u653e\u4e00\u4e2a\u7687\u540e.\n     *\n     * @param C \u68cb\u5c40\n     * @param row \u5f53\u524d\u6b63\u5728\u5904\u7406\u7684\u884c\uff0c\u524d\u9762\u7684\u884c\u90fd\u5df2\u7ecf\u653e\u4e86\u7687\u540e\u4e86\n     * @param col \u5f53\u524d\u5217\n     * @return \u80fd\u5426\u653e\u4e00\u4e2a\u7687\u540e\n     */\n    private static boolean isValid(int[] C, int row, int col) {\n        for (int i = 0; i < row; ++i) {\n            // \u5728\u540c\u4e00\u5217\n            if (C[i] == col) return false;\n            // \u5728\u540c\u4e00\u5bf9\u89d2\u7ebf\u4e0a\n            if (Math.abs(i - row) == Math.abs(C[i] - col)) return false;\n        }\n        return true;\n    }\n}\n"))),Object(a.b)(s.a,{value:"cpp",mdxType:"TabItem"},Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-cpp"}),"// N-Queens\n// \u6df1\u641c+\u526a\u679d\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n!*n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n)\nclass Solution {\npublic:\n    vector<vector<string> > solveNQueens(int n) {\n        vector<vector<string> > result;\n        vector<int> C(n, -1);  // C[i]\u8868\u793a\u7b2ci\u884c\u7687\u540e\u6240\u5728\u7684\u5217\u7f16\u53f7\n        dfs(C, result, 0);\n        return result;\n    }\nprivate:\n    void dfs(vector<int> &C, vector<vector<string> > &result, int row) {\n        const int N = C.size();\n        if (row == N) { // \u7ec8\u6b62\u6761\u4ef6\uff0c\u4e5f\u662f\u6536\u655b\u6761\u4ef6\uff0c\u610f\u5473\u7740\u627e\u5230\u4e86\u4e00\u4e2a\u53ef\u884c\u89e3\n            vector<string> solution;\n            for (int i = 0; i < N; ++i) {\n                string s(N, '.');\n                for (int j = 0; j < N; ++j) {\n                    if (j == C[i]) s[j] = 'Q';\n                }\n                solution.push_back(s);\n            }\n            result.push_back(solution);\n            return;\n        }\n\n        for (int j = 0; j < N; ++j) {  // \u6269\u5c55\u72b6\u6001\uff0c\u4e00\u5217\u4e00\u5217\u7684\u8bd5\n            const bool ok = isValid(C, row, j);\n            if (!ok) continue;  // \u526a\u679d\uff0c\u5982\u679c\u975e\u6cd5\uff0c\u7ee7\u7eed\u5c1d\u8bd5\u4e0b\u4e00\u5217\n            // \u6267\u884c\u6269\u5c55\u52a8\u4f5c\n            C[row] = j;\n            dfs(C, result, row + 1);\n            // \u64a4\u9500\u52a8\u4f5c\n            // C[row] = -1;\n        }\n    }\n\n    /**\n     * \u80fd\u5426\u5728 (row, col) \u4f4d\u7f6e\u653e\u4e00\u4e2a\u7687\u540e.\n     *\n     * @param C \u68cb\u5c40\n     * @param row \u5f53\u524d\u6b63\u5728\u5904\u7406\u7684\u884c\uff0c\u524d\u9762\u7684\u884c\u90fd\u5df2\u7ecf\u653e\u4e86\u7687\u540e\u4e86\n     * @param col \u5f53\u524d\u5217\n     * @return \u80fd\u5426\u653e\u4e00\u4e2a\u7687\u540e\n     */\n    bool isValid(const vector<int> &C, int row, int col) {\n        for (int i = 0; i < row; ++i) {\n            // \u5728\u540c\u4e00\u5217\n            if (C[i] == col) return false;\n            // \u5728\u540c\u4e00\u5bf9\u89d2\u7ebf\u4e0a\n            if (abs(i - row) == abs(C[i] - col)) return false;\n        }\n        return true;\n    }\n};\n")))),Object(a.b)("h3",{id:"\u4ee3\u7801-2"},"\u4ee3\u7801 2"),Object(a.b)(o.a,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},Object(a.b)(s.a,{value:"java",mdxType:"TabItem"},Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"// N-Queens\n// \u6df1\u641c+\u526a\u679d\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n!)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n)\npublic class Solution {\n    public List<List<String>> solveNQueens(int n) {\n        this.columns = new boolean[n];\n        this.main_diag = new boolean[2 * n - 1];\n        this.anti_diag = new boolean[2 * n - 1];\n\n        List<List<String>> result = new ArrayList<>();\n        int[] C = new int[n];\n        Arrays.fill(C, -1); // C[i]\u8868\u793a\u7b2ci\u884c\u7687\u540e\u6240\u5728\u7684\u5217\u7f16\u53f7\n        dfs(C, 0, result);\n        return result;\n    }\n\n\n    private void dfs(int[] C, int row, List<List<String>> result) {\n        final int N = C.length;\n        if (row == N) { // \u7ec8\u6b62\u6761\u4ef6\uff0c\u4e5f\u662f\u6536\u655b\u6761\u4ef6\uff0c\u610f\u5473\u7740\u627e\u5230\u4e86\u4e00\u4e2a\u53ef\u884c\u89e3\n            List<String> solution = new ArrayList<>();\n            for (int i = 0; i < N; ++i) {\n                char[] charArray = new char[N];\n                Arrays.fill(charArray, '.');\n                for (int j = 0; j < N; ++j) {\n                    if (j == C[i]) charArray[j] = 'Q';\n                }\n                solution.add(new String(charArray));\n            }\n            result.add(solution);\n            return;\n        }\n\n        for (int j = 0; j < N; ++j) {  // \u6269\u5c55\u72b6\u6001\uff0c\u4e00\u5217\u4e00\u5217\u7684\u8bd5\n            final boolean ok = !columns[j] && !main_diag[row - j + N - 1]  &&\n                    !anti_diag[row + j];\n            if (!ok) continue;  // \u526a\u679d\uff0c\u5982\u679c\u975e\u6cd5\uff0c\u7ee7\u7eed\u5c1d\u8bd5\u4e0b\u4e00\u5217\n            // \u6267\u884c\u6269\u5c55\u52a8\u4f5c\n            C[row] = j;\n            columns[j] = main_diag[row - j + N - 1] = anti_diag[row + j] = true;\n            dfs(C, row + 1, result);\n            // \u64a4\u9500\u52a8\u4f5c\n            // C[row] = -1;\n            columns[j] = main_diag[row - j + N - 1] = anti_diag[row + j] = false;\n        }\n    }\n    // \u8fd9\u4e09\u4e2a\u53d8\u91cf\u7528\u4e8e\u526a\u679d\n    private boolean[] columns;  // \u8868\u793a\u5df2\u7ecf\u653e\u7f6e\u7684\u7687\u540e\u5360\u636e\u4e86\u54ea\u4e9b\u5217\n    private boolean[] main_diag;  // \u5360\u636e\u4e86\u54ea\u4e9b\u4e3b\u5bf9\u89d2\u7ebf\n    private boolean[] anti_diag;  // \u5360\u636e\u4e86\u54ea\u4e9b\u526f\u5bf9\u89d2\u7ebf\n}\n"))),Object(a.b)(s.a,{value:"cpp",mdxType:"TabItem"},Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-cpp"}),"// N-Queens\n// \u6df1\u641c+\u526a\u679d\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n!)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n)\nclass Solution {\npublic:\n    vector<vector<string> > solveNQueens(int n) {\n        this->columns = vector<bool>(n, false);\n        this->main_diag = vector<bool>(2 * n - 1, false);\n        this->anti_diag = vector<bool>(2 * n - 1, false);\n\n        vector<vector<string> > result;\n        vector<int> C(n, -1);  // C[i]\u8868\u793a\u7b2ci\u884c\u7687\u540e\u6240\u5728\u7684\u5217\u7f16\u53f7\n        dfs(C, result, 0);\n        return result;\n    }\nprivate:\n    // \u8fd9\u4e09\u4e2a\u53d8\u91cf\u7528\u4e8e\u526a\u679d\n    vector<bool> columns;  // \u8868\u793a\u5df2\u7ecf\u653e\u7f6e\u7684\u7687\u540e\u5360\u636e\u4e86\u54ea\u4e9b\u5217\n    vector<bool> main_diag;  // \u5360\u636e\u4e86\u54ea\u4e9b\u4e3b\u5bf9\u89d2\u7ebf\n    vector<bool> anti_diag;  // \u5360\u636e\u4e86\u54ea\u4e9b\u526f\u5bf9\u89d2\u7ebf\n\n    void dfs(vector<int> &C, vector<vector<string> > &result, int row) {\n        const int N = C.size();\n        if (row == N) { // \u7ec8\u6b62\u6761\u4ef6\uff0c\u4e5f\u662f\u6536\u655b\u6761\u4ef6\uff0c\u610f\u5473\u7740\u627e\u5230\u4e86\u4e00\u4e2a\u53ef\u884c\u89e3\n            vector<string> solution;\n            for (int i = 0; i < N; ++i) {\n                string s(N, '.');\n                for (int j = 0; j < N; ++j) {\n                    if (j == C[i]) s[j] = 'Q';\n                }\n                solution.push_back(s);\n            }\n            result.push_back(solution);\n            return;\n        }\n\n        for (int j = 0; j < N; ++j) {  // \u6269\u5c55\u72b6\u6001\uff0c\u4e00\u5217\u4e00\u5217\u7684\u8bd5\n            const bool ok = !columns[j] && !main_diag[row - j + N - 1]  &&\n                    !anti_diag[row + j];\n            if (!ok) continue;  // \u526a\u679d\uff0c\u5982\u679c\u975e\u6cd5\uff0c\u7ee7\u7eed\u5c1d\u8bd5\u4e0b\u4e00\u5217\n            // \u6267\u884c\u6269\u5c55\u52a8\u4f5c\n            C[row] = j;\n            columns[j] = main_diag[row - j + N - 1] = anti_diag[row + j] = true;\n            dfs(C, result, row + 1);\n            // \u64a4\u9500\u52a8\u4f5c\n            // C[row] = -1;\n            columns[j] = main_diag[row - j + N - 1] = anti_diag[row + j] = false;\n        }\n    }\n};\n")))),Object(a.b)("h3",{id:"\u76f8\u5173\u9898\u76ee"},"\u76f8\u5173\u9898\u76ee"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object(r.a)({parentName:"li"},{href:"/dfs/n-queens-ii"}),"N-Queens II"))))}f.isMDXComponent=!0},333:function(n,e,t){"use strict";t.d(e,"a",(function(){return b})),t.d(e,"b",(function(){return d}));var r=t(0),i=t.n(r);function a(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function o(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function s(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?o(Object(t),!0).forEach((function(e){a(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function l(n,e){if(null==n)return{};var t,r,i=function(n,e){if(null==n)return{};var t,r,i={},a=Object.keys(n);for(r=0;r<a.length;r++)t=a[r],e.indexOf(t)>=0||(i[t]=n[t]);return i}(n,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);for(r=0;r<a.length;r++)t=a[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(i[t]=n[t])}return i}var c=i.a.createContext({}),u=function(n){var e=i.a.useContext(c),t=e;return n&&(t="function"==typeof n?n(e):s(s({},e),n)),t},b=function(n){var e=u(n.components);return i.a.createElement(c.Provider,{value:e},n.children)},f={inlineCode:"code",wrapper:function(n){var e=n.children;return i.a.createElement(i.a.Fragment,{},e)}},p=i.a.forwardRef((function(n,e){var t=n.components,r=n.mdxType,a=n.originalType,o=n.parentName,c=l(n,["components","mdxType","originalType","parentName"]),b=u(t),p=r,d=b["".concat(o,".").concat(p)]||b[p]||f[p]||a;return t?i.a.createElement(d,s(s({ref:e},c),{},{components:t})):i.a.createElement(d,s({ref:e},c))}));function d(n,e){var t=arguments,r=e&&e.mdxType;if("string"==typeof n||r){var a=t.length,o=new Array(a);o[0]=p;var s={};for(var l in e)hasOwnProperty.call(e,l)&&(s[l]=e[l]);s.originalType=n,s.mdxType="string"==typeof n?n:r,o[1]=s;for(var c=2;c<a;c++)o[c]=t[c];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},334:function(n,e,t){"use strict";function r(n){var e,t,i="";if("string"==typeof n||"number"==typeof n)i+=n;else if("object"==typeof n)if(Array.isArray(n))for(e=0;e<n.length;e++)n[e]&&(t=r(n[e]))&&(i&&(i+=" "),i+=t);else for(e in n)n[e]&&(i&&(i+=" "),i+=e);return i}e.a=function(){for(var n,e,t=0,i="";t<arguments.length;)(n=arguments[t++])&&(e=r(n))&&(i&&(i+=" "),i+=e);return i}},335:function(n,e,t){"use strict";var r=t(0),i=t(336);e.a=function(){var n=Object(r.useContext)(i.a);if(null==n)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return n}},336:function(n,e,t){"use strict";var r=t(0),i=Object(r.createContext)(void 0);e.a=i},337:function(n,e,t){"use strict";var r=t(0),i=t.n(r),a=t(335),o=t(334),s=t(49),l=t.n(s),c=37,u=39;e.a=function(n){var e=n.block,t=n.children,s=n.defaultValue,b=n.values,f=n.groupId,p=n.className,d=Object(a.a)(),j=d.tabGroupChoices,m=d.setTabGroupChoices,v=Object(r.useState)(s),w=v[0],O=v[1],g=Object(r.useState)(!1),h=g[0],y=g[1];if(null!=f){var C=j[f];null!=C&&C!==w&&b.some((function(n){return n.value===C}))&&O(C)}var N=function(n){O(n),null!=f&&m(f,n)},k=[],_=function(n){n.metaKey||n.altKey||n.ctrlKey||y(!0)},Q=function(){y(!1)};return Object(r.useEffect)((function(){return window.addEventListener("keydown",_),window.addEventListener("mousedown",Q),function(){window.removeEventListener("keydown",_),window.removeEventListener("mousedown",Q)}}),[]),i.a.createElement("div",null,i.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(o.a)("tabs",{"tabs--block":e},p)},b.map((function(n){var e=n.value,t=n.label;return i.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":w===e,className:Object(o.a)("tabs__item",l.a.tabItem,{"tabs__item--active":w===e}),style:h?{}:{outline:"none"},key:e,ref:function(n){return k.push(n)},onKeyDown:function(n){!function(n,e,t){switch(t.keyCode){case u:!function(n,e){var t=n.indexOf(e)+1;n[t]?n[t].focus():n[0].focus()}(n,e);break;case c:!function(n,e){var t=n.indexOf(e)-1;n[t]?n[t].focus():n[n.length-1].focus()}(n,e)}}(k,n.target,n),_(n)},onFocus:function(){return N(e)},onClick:function(){N(e),y(!1)},onPointerDown:function(){return y(!1)}},t)}))),i.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},r.Children.toArray(t).filter((function(n){return n.props.value===w}))[0]))}},338:function(n,e,t){"use strict";var r=t(0),i=t.n(r);e.a=function(n){return i.a.createElement("div",null,n.children)}},397:function(n,e,t){"use strict";t.r(e),e.default=t.p+"assets/images/8-queens-b485b6083f2778f1ebbee5bf753c991a.png"}}]);