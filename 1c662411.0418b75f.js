(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{337:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),c=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=c(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},p=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),d=c(n),p=r,m=d["".concat(l,".").concat(p)]||d[p]||b[p]||i;return n?a.a.createElement(m,o(o({ref:t},s),{},{components:n})):a.a.createElement(m,o({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=p;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var s=2;s<i;s++)l[s]=n[s];return a.a.createElement.apply(null,l)}return a.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},338:function(e,t,n){"use strict";function r(e){var t,n,a="";if("string"==typeof e||"number"==typeof e)a+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=r(e[t]))&&(a&&(a+=" "),a+=n);else for(t in e)e[t]&&(a&&(a+=" "),a+=t);return a}t.a=function(){for(var e,t,n=0,a="";n<arguments.length;)(e=arguments[n++])&&(t=r(e))&&(a&&(a+=" "),a+=t);return a}},339:function(e,t,n){"use strict";var r=n(0),a=n(340);t.a=function(){var e=Object(r.useContext)(a.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},340:function(e,t,n){"use strict";var r=n(0),a=Object(r.createContext)(void 0);t.a=a},341:function(e,t,n){"use strict";var r=n(0),a=n.n(r),i=n(339),l=n(338),o=n(49),u=n.n(o),s=37,c=39;t.a=function(e){var t=e.block,n=e.children,o=e.defaultValue,d=e.values,b=e.groupId,p=e.className,m=Object(i.a)(),f=m.tabGroupChoices,v=m.setTabGroupChoices,O=Object(r.useState)(o),y=O[0],j=O[1],w=Object(r.useState)(!1),h=w[0],g=w[1];if(null!=b){var N=f[b];null!=N&&N!==y&&d.some((function(e){return e.value===N}))&&j(N)}var k=function(e){j(e),null!=b&&v(b,e)},x=[],L=function(e){e.metaKey||e.altKey||e.ctrlKey||g(!0)},T=function(){g(!1)};return Object(r.useEffect)((function(){return window.addEventListener("keydown",L),window.addEventListener("mousedown",T),function(){window.removeEventListener("keydown",L),window.removeEventListener("mousedown",T)}}),[]),a.a.createElement("div",null,a.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(l.a)("tabs",{"tabs--block":t},p)},d.map((function(e){var t=e.value,n=e.label;return a.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":y===t,className:Object(l.a)("tabs__item",u.a.tabItem,{"tabs__item--active":y===t}),style:h?{}:{outline:"none"},key:t,ref:function(e){return x.push(e)},onKeyDown:function(e){!function(e,t,n){switch(n.keyCode){case c:!function(e,t){var n=e.indexOf(t)+1;e[n]?e[n].focus():e[0].focus()}(e,t);break;case s:!function(e,t){var n=e.indexOf(t)-1;e[n]?e[n].focus():e[e.length-1].focus()}(e,t)}}(x,e.target,e),L(e)},onFocus:function(){return k(t)},onClick:function(){k(t),g(!1)},onPointerDown:function(){return g(!1)}},n)}))),a.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},r.Children.toArray(n).filter((function(e){return e.props.value===y}))[0]))}},342:function(e,t,n){"use strict";var r=n(0),a=n.n(r);t.a=function(e){return a.a.createElement("div",null,e.children)}},99:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return u})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return b}));var r=n(2),a=n(7),i=(n(0),n(337)),l=n(341),o=n(342),u={title:"Add Two Numbers II"},s={unversionedId:"linear-list/linked-list/add-two-numbers-ii",id:"linear-list/linked-list/add-two-numbers-ii",isDocsHomePage:!1,title:"Add Two Numbers II",description:"\u63cf\u8ff0",source:"@site/docs/linear-list/linked-list/add-two-numbers-ii.md",slug:"/linear-list/linked-list/add-two-numbers-ii",permalink:"/linear-list/linked-list/add-two-numbers-ii",editUrl:"https://github.com/soulmachine/algorithm-essentials/edit/master/docs/linear-list/linked-list/add-two-numbers-ii.md",version:"current",sidebar:"someSidebar",previous:{title:"Add Two Numbers",permalink:"/linear-list/linked-list/add-two-numbers"},next:{title:"Reverse Linked List II",permalink:"/linear-list/linked-list/reverse-linked-list-ii"}},c=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",children:[]},{value:"\u5206\u6790",id:"\u5206\u6790",children:[]},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",children:[]},{value:"\u76f8\u5173\u9898\u76ee",id:"\u76f8\u5173\u9898\u76ee",children:[]}],d={rightToc:c};function b(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},d,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),Object(i.b)("p",null,"You are given two non-empty linked lists representing two non-negative integers. The most significant digit comes first and each of their nodes contain a single digit. Add the two numbers and return it as a linked list."),Object(i.b)("p",null,"You may assume the two numbers do not contain any leading zero, except the number 0 itself."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Example"),":"),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},Object(i.b)("strong",{parentName:"p"},"Input"),": (7 -> 2 -> 4 -> 3) + (5 -> 6 -> 4)",Object(i.b)("br",{parentName:"p"}),"\n",Object(i.b)("strong",{parentName:"p"},"Output"),": 7 -> 8 -> 0 -> 7")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Follow up:"),Object(i.b)("br",{parentName:"p"}),"\n","What if you cannot modify the input lists? In other words, reversing the lists is not allowed."),Object(i.b)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),Object(i.b)("p",null,"\u5148\u628a\u4e24\u4e2a\u5355\u804a\u8868\u53cd\u8f6c\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u590d\u7528 ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"/linear-list/linked-list/add-two-numbers"}),"Add Two Numbers")," \u7684\u4ee3\u7801\u4e86\u3002"),Object(i.b)("h3",{id:"\u4ee3\u7801"},"\u4ee3\u7801"),Object(i.b)(l.a,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},Object(i.b)(o.a,{value:"java",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"// Add Two Numbers II\n// Time Complexity: O(m+n), Time Complexity: O(1)\npublic class Solution {\n    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {\n        l1 = reverseList(l1);\n        l2 = reverseList(l2);\n        ListNode result = addTwoNumbersI(l1, l2);\n        return reverseList(result);\n    }\n\n    private static ListNode addTwoNumbersI(ListNode l1, ListNode l2) {\n        ListNode dummy = new ListNode(-1); // \u5934\u8282\u70b9\n        int carry = 0;\n        ListNode prev = dummy;\n        for (ListNode pa = l1, pb = l2;\n             pa != null || pb != null;\n             pa = pa == null ? null : pa.next,\n             pb = pb == null ? null : pb.next,\n             prev = prev.next) {\n            final int ai = pa == null ? 0 : pa.val;\n            final int bi = pb == null ? 0 : pb.val;\n            final int value = (ai + bi + carry) % 10;\n            carry = (ai + bi + carry) / 10;\n            prev.next = new ListNode(value); // \u5c3e\u63d2\u6cd5\n        }\n        if (carry > 0)\n            prev.next = new ListNode(carry);\n        return dummy.next;\n    }\n\n    private static ListNode reverseList(ListNode head) {\n        ListNode p = null;\n        ListNode q = head;\n        while (q != null) {\n            ListNode tmp = q.next;\n            q.next = p;\n            p = q;\n            q = tmp;\n        }\n        return p;\n    }\n};\n"))),Object(i.b)(o.a,{value:"cpp",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-cpp"}),"// TODO\n")))),Object(i.b)("h3",{id:"\u76f8\u5173\u9898\u76ee"},"\u76f8\u5173\u9898\u76ee"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"/linear-list/linked-list/add-two-numbers"}),"Add Two Numbers")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"/simulation/add-binary"}),"Add Binary")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"/simulation/add-strings"}),"Add Strings"))))}b.isMDXComponent=!0}}]);