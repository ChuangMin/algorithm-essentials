(window.webpackJsonp=window.webpackJsonp||[]).push([[215],{277:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return c})),t.d(n,"metadata",(function(){return l})),t.d(n,"rightToc",(function(){return u})),t.d(n,"default",(function(){return d}));var r=t(2),a=t(7),i=(t(0),t(315)),o=t(319),s=t(320),c={title:"Surrounded Regions"},l={unversionedId:"bfs/surrounded-regions",id:"bfs/surrounded-regions",isDocsHomePage:!1,title:"Surrounded Regions",description:"\u63cf\u8ff0",source:"@site/docs/bfs/surrounded-regions.md",slug:"/bfs/surrounded-regions",permalink:"/bfs/surrounded-regions",editUrl:"https://github.com/soulmachine/algorithm-essentials/edit/master/docs/bfs/surrounded-regions.md",version:"current",sidebar:"someSidebar",previous:{title:"Word Ladder II",permalink:"/bfs/word-ladder-ii"},next:{title:"The Maze",permalink:"/bfs/the-maze"}},u=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",children:[]},{value:"\u5206\u6790",id:"\u5206\u6790",children:[]},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",children:[]}],b={rightToc:u};function d(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},b,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),Object(i.b)("p",null,"Given a 2D board containing ",Object(i.b)("inlineCode",{parentName:"p"},"'X'")," and ",Object(i.b)("inlineCode",{parentName:"p"},"'O'"),", capture all regions surrounded by ",Object(i.b)("inlineCode",{parentName:"p"},"'X'"),"."),Object(i.b)("p",null,"A region is captured by flipping all ",Object(i.b)("inlineCode",{parentName:"p"},"'O'"),"s into ",Object(i.b)("inlineCode",{parentName:"p"},"'X'"),"s in that surrounded region ."),Object(i.b)("p",null,"For example,"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-text"}),"X X X X\nX O O X\nX X O X\nX O X X\n")),Object(i.b)("p",null,"After running your function, the board should be:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-text"}),"X X X X\nX X X X\nX X X X\nX O X X\n")),Object(i.b)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),Object(i.b)("p",null,"\u5e7f\u641c\u3002\u4ece\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u8fb9\u754c\u5f80\u91cc\u8d70\uff0c\u51e1\u662f\u80fd\u78b0\u5230\u7684",Object(i.b)("inlineCode",{parentName:"p"},"'O'"),"\uff0c\u90fd\u662f\u8ddf\u8fb9\u754c\u63a5\u58e4\u7684\uff0c\u5e94\u8be5\u4fdd\u7559\u3002"),Object(i.b)("h3",{id:"\u4ee3\u7801"},"\u4ee3\u7801"),Object(i.b)(o.a,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},Object(i.b)(s.a,{value:"java",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"// Surrounded Regions\n// BFS\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n)\npublic class Solution {\n    public void solve(char[][] board) {\n        if (board.length == 0) return;\n\n        final int m = board.length;\n        final int n = board[0].length;\n        for (int i = 0; i < n; i++) {\n            bfs(board, 0, i);\n            bfs(board, m - 1, i);\n        }\n        for (int j = 1; j < m - 1; j++) {\n            bfs(board, j, 0);\n            bfs(board, j, n - 1);\n        }\n        for (int i = 0; i < m; i++)\n            for (int j = 0; j < n; j++)\n                if (board[i][j] == 'O')\n                    board[i][j] = 'X';\n                else if (board[i][j] == '+')\n                    board[i][j] = 'O';\n    }\n    private static void bfs(char[][] board, int i, int j) {\n        Queue<State> q = new LinkedList<>();\n        final int m = board.length;\n        final int n = board[0].length;\n\n        final Function<State, Boolean> stateIsValid = (State s) -> {\n            if (s.x < 0 || s.x >= m || s.y < 0 || s.y >= n ||\n                    board[s.x][s.y] != 'O')\n                return false;\n            return true;\n        };\n        final Function<State, ArrayList<State>> stateExtend = (State s) -> {\n            ArrayList<State> result = new ArrayList<>();\n            final int x = s.x;\n            final int y = s.y;\n            // \u4e0a\u4e0b\u5de6\u53f3\n            State[] newStates = new State[]{new State(x-1, y),\n                    new State(x+1,y),\n                    new State(x,y-1),\n                    new State(x,y+1)\n            };\n            for (int k = 0; k < 4; ++k) {\n                if (stateIsValid.apply(newStates[k])) {\n                    // \u65e2\u6709\u6807\u8bb0\u529f\u80fd\u53c8\u6709\u53bb\u91cd\u529f\u80fd\n                    board[newStates[k].x][newStates[k].y] = '+';\n                    result.add(newStates[k]);\n                }\n            }\n            return result;\n        };\n        State start = new State(i, j);\n        if (stateIsValid.apply(start)) {\n            board[i][j] = '+';\n            q.offer(start);\n        }\n        while (!q.isEmpty()) {\n            State cur = q.poll();\n            ArrayList<State> newStates = stateExtend.apply(cur);\n            for (State s : newStates) q.offer(s);\n        }\n    }\n    static class State {\n        private int x;\n        private int y;\n        public State(int x, int y) {\n            this.x = x;\n            this.y = y;\n        }\n    }\n}\n"))),Object(i.b)(s.a,{value:"cpp",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-cpp"}),"// LeetCode, Surrounded Regions\n// BFS\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n)\nclass Solution {\npublic:\n    void solve(vector<vector<char>> &board) {\n        if (board.empty()) return;\n\n        const int m = board.size();\n        const int n = board[0].size();\n        for (int i = 0; i < n; i++) {\n            bfs(board, 0, i);\n            bfs(board, m - 1, i);\n        }\n        for (int j = 1; j < m - 1; j++) {\n            bfs(board, j, 0);\n            bfs(board, j, n - 1);\n        }\n        for (int i = 0; i < m; i++)\n            for (int j = 0; j < n; j++)\n                if (board[i][j] == 'O')\n                    board[i][j] = 'X';\n                else if (board[i][j] == '+')\n                    board[i][j] = 'O';\n    }\nprivate:\n    void bfs(vector<vector<char>> &board, int i, int j) {\n        typedef pair<int, int> state_t;\n        queue<state_t> q;\n        const int m = board.size();\n        const int n = board[0].size();\n\n        auto state_is_valid = [&](const state_t &s) {\n            const int x = s.first;\n            const int y = s.second;\n            if (x < 0 || x >= m || y < 0 || y >= n || board[x][y] != 'O')\n                return false;\n            return true;\n        };\n\n        auto state_extend = [&](const state_t &s) {\n            vector<state_t> result;\n            const int x = s.first;\n            const int y = s.second;\n            // \u4e0a\u4e0b\u5de6\u53f3\n            const state_t new_states[4] = {{x-1,y}, {x+1,y},\n                    {x,y-1}, {x,y+1}};\n            for (int k = 0; k < 4;  ++k) {\n                if (state_is_valid(new_states[k])) {\n                    // \u65e2\u6709\u6807\u8bb0\u529f\u80fd\u53c8\u6709\u53bb\u91cd\u529f\u80fd\n                    board[new_states[k].first][new_states[k].second] = '+';\n                    result.push_back(new_states[k]);\n                }\n            }\n\n            return result;\n        };\n\n        state_t start = { i, j };\n        if (state_is_valid(start)) {\n            board[i][j] = '+';\n            q.push(start);\n        }\n        while (!q.empty()) {\n            auto cur = q.front();\n            q.pop();\n            auto new_states = state_extend(cur);\n            for (auto s : new_states) q.push(s);\n        }\n    }\n};\n")))))}d.isMDXComponent=!0},315:function(e,n,t){"use strict";t.d(n,"a",(function(){return b})),t.d(n,"b",(function(){return p}));var r=t(0),a=t.n(r);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=a.a.createContext({}),u=function(e){var n=a.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},b=function(e){var n=u(e.components);return a.a.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},f=a.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),b=u(t),f=r,p=b["".concat(o,".").concat(f)]||b[f]||d[f]||i;return t?a.a.createElement(p,s(s({ref:n},l),{},{components:t})):a.a.createElement(p,s({ref:n},l))}));function p(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=f;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var l=2;l<i;l++)o[l]=t[l];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,t)}f.displayName="MDXCreateElement"},316:function(e,n,t){"use strict";function r(e){var n,t,a="";if("string"==typeof e||"number"==typeof e)a+=e;else if("object"==typeof e)if(Array.isArray(e))for(n=0;n<e.length;n++)e[n]&&(t=r(e[n]))&&(a&&(a+=" "),a+=t);else for(n in e)e[n]&&(a&&(a+=" "),a+=n);return a}n.a=function(){for(var e,n,t=0,a="";t<arguments.length;)(e=arguments[t++])&&(n=r(e))&&(a&&(a+=" "),a+=n);return a}},317:function(e,n,t){"use strict";var r=t(0);const a=Object(r.createContext)(void 0);n.a=a},318:function(e,n,t){"use strict";var r=t(0),a=t(317);n.a=function(){const e=Object(r.useContext)(a.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},319:function(e,n,t){"use strict";var r=t(0),a=t.n(r),i=t(318),o=t(316),s=t(49),c=t.n(s);const l=37,u=39;n.a=function(e){const{block:n,children:t,defaultValue:s,values:b,groupId:d}=e,{tabGroupChoices:f,setTabGroupChoices:p}=Object(i.a)(),[m,j]=Object(r.useState)(s),[y,O]=Object(r.useState)(!1);if(null!=d){const e=f[d];null!=e&&e!==m&&b.some((n=>n.value===e))&&j(e)}const v=e=>{j(e),null!=d&&p(d,e)},g=[],h=e=>{e.metaKey||e.altKey||e.ctrlKey||O(!0)},w=()=>{O(!1)};return Object(r.useEffect)((()=>{window.addEventListener("keydown",h),window.addEventListener("mousedown",w)}),[]),a.a.createElement("div",null,a.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(o.a)("tabs",{"tabs--block":n})},b.map((({value:e,label:n})=>a.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":m===e,className:Object(o.a)("tabs__item",c.a.tabItem,{"tabs__item--active":m===e}),style:y?{}:{outline:"none"},key:e,ref:e=>g.push(e),onKeyDown:e=>{((e,n,t)=>{switch(t.keyCode){case u:((e,n)=>{const t=e.indexOf(n)+1;e[t]?e[t].focus():e[0].focus()})(e,n);break;case l:((e,n)=>{const t=e.indexOf(n)-1;e[t]?e[t].focus():e[e.length-1].focus()})(e,n)}})(g,e.target,e),h(e)},onFocus:()=>v(e),onClick:()=>{v(e),O(!1)},onPointerDown:()=>O(!1)},n)))),a.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},r.Children.toArray(t).filter((e=>e.props.value===m))[0]))}},320:function(e,n,t){"use strict";var r=t(0),a=t.n(r);n.a=function(e){return a.a.createElement("div",null,e.children)}}}]);