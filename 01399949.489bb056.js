(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{310:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return b}));var r=n(0),l=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var c=l.a.createContext({}),u=function(e){var t=l.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=u(e.components);return l.a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return l.a.createElement(l.a.Fragment,{},t)}},f=l.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,a=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=u(n),f=r,b=d["".concat(a,".").concat(f)]||d[f]||p[f]||o;return n?l.a.createElement(b,i(i({ref:t},c),{},{components:n})):l.a.createElement(b,i({ref:t},c))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=f;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,a[1]=i;for(var c=2;c<o;c++)a[c]=n[c];return l.a.createElement.apply(null,a)}return l.a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},311:function(e,t,n){"use strict";function r(e){var t,n,l="";if("string"==typeof e||"number"==typeof e)l+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=r(e[t]))&&(l&&(l+=" "),l+=n);else for(t in e)e[t]&&(l&&(l+=" "),l+=t);return l}t.a=function(){for(var e,t,n=0,l="";n<arguments.length;)(e=arguments[n++])&&(t=r(e))&&(l&&(l+=" "),l+=t);return l}},312:function(e,t,n){"use strict";var r=n(0);const l=Object(r.createContext)(void 0);t.a=l},313:function(e,t,n){"use strict";var r=n(0),l=n(312);t.a=function(){const e=Object(r.useContext)(l.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},314:function(e,t,n){"use strict";var r=n(0),l=n.n(r),o=n(313),a=n(311),i=n(49),s=n.n(i);const c=37,u=39;t.a=function(e){const{block:t,children:n,defaultValue:i,values:d,groupId:p}=e,{tabGroupChoices:f,setTabGroupChoices:b}=Object(o.a)(),[m,v]=Object(r.useState)(i),[O,g]=Object(r.useState)(!1);if(null!=p){const e=f[p];null!=e&&e!==m&&d.some((t=>t.value===e))&&v(e)}const h=e=>{v(e),null!=p&&b(p,e)},y=[],L=e=>{e.metaKey||e.altKey||e.ctrlKey||g(!0)},j=()=>{g(!1)};return Object(r.useEffect)((()=>{window.addEventListener("keydown",L),window.addEventListener("mousedown",j)}),[]),l.a.createElement("div",null,l.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(a.a)("tabs",{"tabs--block":t})},d.map((({value:e,label:t})=>l.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":m===e,className:Object(a.a)("tabs__item",s.a.tabItem,{"tabs__item--active":m===e}),style:O?{}:{outline:"none"},key:e,ref:e=>y.push(e),onKeyDown:e=>{((e,t,n)=>{switch(n.keyCode){case u:((e,t)=>{const n=e.indexOf(t)+1;e[n]?e[n].focus():e[0].focus()})(e,t);break;case c:((e,t)=>{const n=e.indexOf(t)-1;e[n]?e[n].focus():e[e.length-1].focus()})(e,t)}})(y,e.target,e),L(e)},onFocus:()=>h(e),onClick:()=>{h(e),g(!1)},onPointerDown:()=>g(!1)},t)))),l.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},r.Children.toArray(n).filter((e=>e.props.value===m))[0]))}},315:function(e,t,n){"use strict";var r=n(0),l=n.n(r);t.a=function(e){return l.a.createElement("div",null,e.children)}},60:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return u})),n.d(t,"default",(function(){return p}));var r=n(2),l=n(7),o=(n(0),n(310)),a=n(314),i=n(315),s={title:"Sort List"},c={unversionedId:"sorting/merge-sort/sort-list",id:"sorting/merge-sort/sort-list",isDocsHomePage:!1,title:"Sort List",description:"\u63cf\u8ff0",source:"@site/docs/sorting/merge-sort/sort-list.md",slug:"/sorting/merge-sort/sort-list",permalink:"/sorting/merge-sort/sort-list",editUrl:"https://github.com/soulmachine/algorithm-essentials/edit/master/docs/sorting/merge-sort/sort-list.md",version:"current"},u=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",children:[]},{value:"\u5206\u6790",id:"\u5206\u6790",children:[]},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",children:[]},{value:"\u76f8\u5173\u9898\u76ee",id:"\u76f8\u5173\u9898\u76ee",children:[]}],d={rightToc:u};function p(e){var t=e.components,n=Object(l.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},d,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),Object(o.b)("p",null,"Sort a linked list in ",Object(o.b)("inlineCode",{parentName:"p"},"O(n log n)")," time using constant space complexity."),Object(o.b)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),Object(o.b)("p",null,"\u5e38\u6570\u7a7a\u95f4\u4e14",Object(o.b)("inlineCode",{parentName:"p"},"O(nlogn)"),"\uff0c\u5355\u94fe\u8868\u9002\u5408\u7528\u5f52\u5e76\u6392\u5e8f\uff0c\u53cc\u5411\u94fe\u8868\u9002\u5408\u7528\u5feb\u901f\u6392\u5e8f\u3002\u672c\u9898\u53ef\u4ee5\u590d\u7528 ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"/sorting/merge-sort/merge-two-sorted-lists"}),"Merge Two Sorted Lists")," \u7684\u4ee3\u7801\u3002"),Object(o.b)("h3",{id:"\u4ee3\u7801"},"\u4ee3\u7801"),Object(o.b)(a.a,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},Object(o.b)(i.a,{value:"java",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"// Sort List\n// \u5f52\u5e76\u6392\u5e8f\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(nlogn)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(1)\npublic class Solution {\n    public ListNode sortList(ListNode head) {\n        if (head == null || head.next == null)return head;\n\n        final ListNode middle = findMiddle(head);\n        final ListNode head2 = middle.next;\n        middle.next = null; // \u65ad\u5f00\n\n        final ListNode l1 = sortList(head);  // \u524d\u534a\u6bb5\u6392\u5e8f\n        final ListNode l2 = sortList(head2);  // \u540e\u534a\u6bb5\u6392\u5e8f\n        return mergeTwoLists(l1, l2);\n    }\n\n    // Merge Two Sorted Lists\n    private static ListNode mergeTwoLists(ListNode l1, ListNode l2) {\n        ListNode dummy = new ListNode(-1);\n        for (ListNode p = dummy; l1 != null || l2 != null; p = p.next) {\n            int val1 = l1 == null ? Integer.MAX_VALUE : l1.val;\n            int val2 = l2 == null ? Integer.MAX_VALUE : l2.val;\n            if (val1 <= val2) {\n                p.next = l1;\n                l1 = l1.next;\n            } else {\n                p.next = l2;\n                l2 = l2.next;\n            }\n        }\n        return dummy.next;\n    }\n    // \u5feb\u6162\u6307\u9488\u627e\u5230\u4e2d\u95f4\u8282\u70b9\n    private static ListNode findMiddle(ListNode head) {\n        if (head == null) return null;\n\n        ListNode slow = head;\n        ListNode fast = head.next;\n\n        while (fast != null && fast.next != null) {\n            slow = slow.next;\n            fast = fast.next.next;\n        }\n        return slow;\n    }\n}\n"))),Object(o.b)(i.a,{value:"cpp",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-cpp"}),"// Sort List\n// \u5f52\u5e76\u6392\u5e8f\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(nlogn)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(1)\nclass Solution {\npublic:\n    ListNode *sortList(ListNode *head) {\n        if (head == NULL || head->next == NULL)return head;\n\n        ListNode *middle = findMiddle(head);\n        ListNode *head2 = middle->next;\n        middle->next = nullptr; // \u65ad\u5f00\n\n        ListNode *l1 = sortList(head);  // \u524d\u534a\u6bb5\u6392\u5e8f\n        ListNode *l2 = sortList(head2);  // \u540e\u534a\u6bb5\u6392\u5e8f\n        return mergeTwoLists(l1, l2);\n    }\nprivate:\n    // Merge Two Sorted Lists\n    static ListNode *mergeTwoLists(ListNode *l1, ListNode *l2) {\n        ListNode dummy(-1);\n        for (ListNode* p = &dummy; l1 != nullptr || l2 != nullptr; p = p->next) {\n            int val1 = l1 == nullptr ? INT_MAX : l1->val;\n            int val2 = l2 == nullptr ? INT_MAX : l2->val;\n            if (val1 <= val2) {\n                p->next = l1;\n                l1 = l1->next;\n            } else {\n                p->next = l2;\n                l2 = l2->next;\n            }\n        }\n        return dummy.next;\n    }\n    // \u5feb\u6162\u6307\u9488\u627e\u5230\u4e2d\u95f4\u8282\u70b9\n    static ListNode* findMiddle(ListNode* head) {\n        if (head == nullptr) return nullptr;\n\n        ListNode *slow = head;\n        ListNode *fast = head->next;\n\n        while (fast != nullptr && fast->next != nullptr) {\n            slow = slow->next;\n            fast = fast->next->next;\n        }\n        return slow;\n    }\n};\n")))),Object(o.b)("h3",{id:"\u76f8\u5173\u9898\u76ee"},"\u76f8\u5173\u9898\u76ee"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"/sorting/insertion-sort/insertion-sort-list"}),"Insertion Sort List"))))}p.isMDXComponent=!0}}]);