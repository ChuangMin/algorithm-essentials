(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{298:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return b}));var r=t(0),i=t.n(r);function s(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){s(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=i.a.createContext({}),l=function(e){var n=i.a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=l(e.components);return i.a.createElement(c.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},f=i.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,s=e.originalType,a=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),p=l(t),f=r,b=p["".concat(a,".").concat(f)]||p[f]||d[f]||s;return t?i.a.createElement(b,o(o({ref:n},c),{},{components:t})):i.a.createElement(b,o({ref:n},c))}));function b(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var s=t.length,a=new Array(s);a[0]=f;var o={};for(var u in n)hasOwnProperty.call(n,u)&&(o[u]=n[u]);o.originalType=e,o.mdxType="string"==typeof e?e:r,a[1]=o;for(var c=2;c<s;c++)a[c]=t[c];return i.a.createElement.apply(null,a)}return i.a.createElement.apply(null,t)}f.displayName="MDXCreateElement"},299:function(e,n,t){"use strict";function r(e){var n,t,i="";if("string"==typeof e||"number"==typeof e)i+=e;else if("object"==typeof e)if(Array.isArray(e))for(n=0;n<e.length;n++)e[n]&&(t=r(e[n]))&&(i&&(i+=" "),i+=t);else for(n in e)e[n]&&(i&&(i+=" "),i+=n);return i}n.a=function(){for(var e,n,t=0,i="";t<arguments.length;)(e=arguments[t++])&&(n=r(e))&&(i&&(i+=" "),i+=n);return i}},300:function(e,n,t){"use strict";var r=t(0),i=Object(r.createContext)(void 0);n.a=i},301:function(e,n,t){"use strict";var r=t(0),i=t(300);n.a=function(){var e=Object(r.useContext)(i.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},302:function(e,n,t){"use strict";var r=t(0),i=t.n(r),s=t(301),a=t(299),o=t(47),u=t.n(o),c=37,l=39;n.a=function(e){var n=e.block,t=e.children,o=e.defaultValue,p=e.values,d=e.groupId,f=Object(s.a)(),b=f.tabGroupChoices,m=f.setTabGroupChoices,v=Object(r.useState)(o),g=v[0],O=v[1],y=Object(r.useState)(!1),j=y[0],h=y[1];if(null!=d){var w=b[d];null!=w&&w!==g&&p.some((function(e){return e.value===w}))&&O(w)}var P=function(e){O(e),null!=d&&m(d,e)},x=[],S=function(e){e.metaKey||e.altKey||e.ctrlKey||h(!0)},k=function(){h(!1)};return Object(r.useEffect)((function(){window.addEventListener("keydown",S),window.addEventListener("mousedown",k)}),[]),i.a.createElement("div",null,i.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(a.a)("tabs",{"tabs--block":n})},p.map((function(e){var n=e.value,t=e.label;return i.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":g===n,className:Object(a.a)("tabs__item",u.a.tabItem,{"tabs__item--active":g===n}),style:j?{}:{outline:"none"},key:n,ref:function(e){return x.push(e)},onKeyDown:function(e){!function(e,n,t){switch(t.keyCode){case l:!function(e,n){var t=e.indexOf(n)+1;e[t]?e[t].focus():e[0].focus()}(e,n);break;case c:!function(e,n){var t=e.indexOf(n)-1;e[t]?e[t].focus():e[e.length-1].focus()}(e,n)}}(x,e.target,e),S(e)},onFocus:function(){return P(n)},onClick:function(){P(n),h(!1)},onPointerDown:function(){return h(!1)}},t)}))),i.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},r.Children.toArray(t).filter((function(e){return e.props.value===g}))[0]))}},303:function(e,n,t){"use strict";var r=t(0),i=t.n(r);n.a=function(e){return i.a.createElement("div",null,e.children)}},94:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return u})),t.d(n,"metadata",(function(){return c})),t.d(n,"rightToc",(function(){return l})),t.d(n,"default",(function(){return d}));var r=t(2),i=t(6),s=(t(0),t(298)),a=t(302),o=t(303),u={title:"Restore IP Addresses"},c={unversionedId:"dfs/restore-ip-addresses",id:"dfs/restore-ip-addresses",isDocsHomePage:!1,title:"Restore IP Addresses",description:"\u63cf\u8ff0",source:"@site/docs/dfs/restore-ip-addresses.md",slug:"/dfs/restore-ip-addresses",permalink:"/dfs/restore-ip-addresses",editUrl:"https://github.com/soulmachine/algorithm-essentials/edit/master/docs/dfs/restore-ip-addresses.md",version:"current",sidebar:"someSidebar",previous:{title:"N-Queens II",permalink:"/dfs/n-queens-ii"},next:{title:"Combination Sum",permalink:"/dfs/combination-sum"}},l=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",children:[]},{value:"\u5206\u6790",id:"\u5206\u6790",children:[]},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",children:[]}],p={rightToc:l};function d(e){var n=e.components,t=Object(i.a)(e,["components"]);return Object(s.b)("wrapper",Object(r.a)({},p,t,{components:n,mdxType:"MDXLayout"}),Object(s.b)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),Object(s.b)("p",null,"Given a string containing only digits, restore it by returning all possible valid IP address combinations."),Object(s.b)("p",null,"For example:\nGiven ",Object(s.b)("inlineCode",{parentName:"p"},'"25525511135"'),","),Object(s.b)("p",null,"return ",Object(s.b)("inlineCode",{parentName:"p"},'["255.255.11.135", "255.255.111.35"]'),". (Order does not matter)"),Object(s.b)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),Object(s.b)("p",null,"\u5fc5\u987b\u8981\u8d70\u5230\u5e95\u90e8\u624d\u80fd\u5224\u65ad\u89e3\u662f\u5426\u5408\u6cd5\uff0c\u6df1\u641c\u3002"),Object(s.b)("h3",{id:"\u4ee3\u7801"},"\u4ee3\u7801"),Object(s.b)(a.a,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},Object(s.b)(o.a,{value:"java",mdxType:"TabItem"},Object(s.b)("pre",null,Object(s.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"// Restore IP Addresses\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n^4)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n)\npublic class Solution {\n    public List<String> restoreIpAddresses(String s) {\n        List<String> result = new ArrayList<>();\n        List<String> ip = new ArrayList<>();; // \u5b58\u653e\u4e2d\u95f4\u7ed3\u679c\n        dfs(s, ip, result, 0);\n        return result;\n    }\n\n    /**\n     * \u89e3\u6790\u5b57\u7b26\u4e32\n     * @param[in] s \u5b57\u7b26\u4e32\uff0c\u8f93\u5165\u6570\u636e\n     * @param[out] ip \u5b58\u653e\u4e2d\u95f4\u7ed3\u679c\n     * @param[out] result \u5b58\u653e\u6240\u6709\u53ef\u80fd\u7684IP\u5730\u5740\n     * @param[in] start \u5f53\u524d\u6b63\u5728\u5904\u7406\u7684 index\n     * @return \u65e0\n     */\n    private static void dfs(String s, List<String> ip,\n                            List<String> result, int start) {\n        if (ip.size() == 4 && start == s.length()) {  // \u627e\u5230\u4e00\u4e2a\u5408\u6cd5\u89e3\n            result.add(ip.get(0) + '.' + ip.get(1) + '.' +\n                    ip.get(2) + '.' + ip.get(3));\n            return;\n        }\n\n        if (s.length() - start > (4 - ip.size()) * 3)\n            return;  // \u526a\u679d\n        if (s.length() - start < (4 - ip.size()))\n            return;  // \u526a\u679d\n\n        int num = 0;\n        for (int i = start; i < start + 3 && i < s.length(); i++) {\n            num = num * 10 + (s.charAt(i) - '0');\n\n            if (num < 0 || num > 255) continue;  // \u526a\u679d\n\n            ip.add(s.substring(start, i + 1));\n            dfs(s, ip, result, i + 1);\n            ip.remove(ip.size() - 1);\n\n            if (num == 0) break;  // \u4e0d\u5141\u8bb8\u524d\u7f000\uff0c\u4f46\u5141\u8bb8\u5355\u4e2a0\n        }\n    }\n\n    public static void main(String[] args) {\n        Solution s = new Solution();\n        s.restoreIpAddresses(\"1111\");\n    }\n}\n"))),Object(s.b)(o.a,{value:"cpp",mdxType:"TabItem"},Object(s.b)("pre",null,Object(s.b)("code",Object(r.a)({parentName:"pre"},{className:"language-cpp"}),"// Restore IP Addresses\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n^4)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n)\nclass Solution {\npublic:\n    vector<string> restoreIpAddresses(const string& s) {\n        vector<string> result;\n        vector<string> ip; // \u5b58\u653e\u4e2d\u95f4\u7ed3\u679c\n        dfs(s, ip, result, 0);\n        return result;\n    }\n\n    /**\n     * @brief \u89e3\u6790\u5b57\u7b26\u4e32\n     * @param[in] s \u5b57\u7b26\u4e32\uff0c\u8f93\u5165\u6570\u636e\n     * @param[out] ip \u5b58\u653e\u4e2d\u95f4\u7ed3\u679c\n     * @param[out] result \u5b58\u653e\u6240\u6709\u53ef\u80fd\u7684IP\u5730\u5740\n     * @param[in] start \u5f53\u524d\u6b63\u5728\u5904\u7406\u7684 index\n     * @return \u65e0\n     */\n    void dfs(string s, vector<string>& ip, vector<string> &result,\n            size_t start) {\n        if (ip.size() == 4 && start == s.size()) {  // \u627e\u5230\u4e00\u4e2a\u5408\u6cd5\u89e3\n            result.push_back(ip[0] + '.' + ip[1] + '.' + ip[2] + '.' + ip[3]);\n            return;\n        }\n\n        if (s.size() - start > (4 - ip.size()) * 3)\n            return;  // \u526a\u679d\n        if (s.size() - start < (4 - ip.size()))\n            return;  // \u526a\u679d\n\n        int num = 0;\n        for (size_t i = start; i < start + 3 && i < s.size(); i++) {\n            num = num * 10 + (s[i] - '0');\n\n            if (num < 0 || num > 255) continue;  // \u526a\u679d\n\n            ip.push_back(s.substr(start, i - start + 1));\n            dfs(s, ip, result, i + 1);\n            ip.pop_back();\n\n            if (num == 0) break;  // \u4e0d\u5141\u8bb8\u524d\u7f000\uff0c\u4f46\u5141\u8bb8\u5355\u4e2a0\n        }\n    }\n};\n")))))}d.isMDXComponent=!0}}]);