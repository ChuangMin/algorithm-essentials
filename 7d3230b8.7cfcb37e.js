(window.webpackJsonp=window.webpackJsonp||[]).push([[123],{183:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return a})),t.d(n,"metadata",(function(){return o})),t.d(n,"rightToc",(function(){return c})),t.d(n,"default",(function(){return u}));var r=t(2),i=(t(0),t(301));const a={title:"Combination Sum III"},o={unversionedId:"dfs/combination-sum-iii",id:"dfs/combination-sum-iii",isDocsHomePage:!1,title:"Combination Sum III",description:"\u63cf\u8ff0",source:"@site/docs/dfs/combination-sum-iii.md",slug:"/dfs/combination-sum-iii",permalink:"/dfs/combination-sum-iii",editUrl:"https://github.com/soulmachine/algorithm-essentials/edit/master/docs/dfs/combination-sum-iii.md",version:"current",sidebar:"someSidebar",previous:{title:"Combination Sum II",permalink:"/dfs/combination-sum-ii"},next:{title:"Generate Parentheses",permalink:"/dfs/generate-parentheses"}},c=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",children:[]},{value:"\u5206\u6790",id:"\u5206\u6790",children:[]},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",children:[]},{value:"\u76f8\u5173\u9898\u76ee",id:"\u76f8\u5173\u9898\u76ee",children:[]}],p={rightToc:c};function u({components:e,...n}){return Object(i.b)("wrapper",Object(r.a)({},p,n,{components:e,mdxType:"MDXLayout"}),Object(i.b)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),Object(i.b)("p",null,"Find all possible combinations of ",Object(i.b)("inlineCode",{parentName:"p"},"k")," numbers that add up to a number ",Object(i.b)("inlineCode",{parentName:"p"},"n"),", given that only numbers from 1 to 9 can be used and each combination should be a unique set of numbers."),Object(i.b)("p",null,"Ensure that numbers within the set are sorted in ascending order."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"}," Example 1"),":"),Object(i.b)("p",null,"Input: ",Object(i.b)("inlineCode",{parentName:"p"},"k"),"=3, ",Object(i.b)("inlineCode",{parentName:"p"},"n"),"=7"),Object(i.b)("p",null,"Output: ",Object(i.b)("inlineCode",{parentName:"p"},"[[1,2,4]]")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"}," Example 2"),":"),Object(i.b)("p",null,"Input: ",Object(i.b)("inlineCode",{parentName:"p"},"k"),"=3, ",Object(i.b)("inlineCode",{parentName:"p"},"n"),"=9"),Object(i.b)("p",null,"Output: ",Object(i.b)("inlineCode",{parentName:"p"},"[[1,2,6], [1,3,5], [2,3,4]]")),Object(i.b)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),Object(i.b)("p",null,"\u8fd9\u662f\u4e00\u4e2a\u591a\u9636\u6bb5\u95ee\u9898\uff0c\u76ee\u6807\u662f\u6c42\u6240\u6709\u89e3\uff0c\u663e\u7136\u7528\u6df1\u641c+\u526a\u679d\uff0c\u5373\u56de\u6eaf\u6cd5\u3002"),Object(i.b)("h3",{id:"\u4ee3\u7801"},"\u4ee3\u7801"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"// Combination Sum III\n// Time Complexity: O(9*8*...*(10-k)), Space Complexity: O(k)\npublic class Solution {\n    public List<List<Integer>> combinationSum3(int k, int n) {\n        final List<List<Integer>> result = new ArrayList<>();\n        final List<Integer> path = new ArrayList<>();\n        dfs(k, n, path, result);\n        return result;\n    }\n\n    private static void dfs(int step, int gap, List<Integer> path,\n                            List<List<Integer>> result) {\n        if (step == 0) {\n            if (gap == 0) {\n                result.add(new ArrayList<>(path));\n            }\n            return;\n        }\n\n        if (gap < 1) return;\n\n        final int start = path.isEmpty() ? 1 : path.get(path.size() - 1)+1;\n        for (int i = start; i < 10; ++i) {\n            path.add(i);\n            dfs(step - 1, gap - i, path, result);\n            path.remove(path.size() - 1);\n        }\n    }\n}\n")),Object(i.b)("h3",{id:"\u76f8\u5173\u9898\u76ee"},"\u76f8\u5173\u9898\u76ee"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"/dfs/combination-sum"}),"Combination Sum")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"/dfs/combination-sum-ii"}),"Combination Sum II"))))}u.isMDXComponent=!0},301:function(e,n,t){"use strict";t.d(n,"a",(function(){return s})),t.d(n,"b",(function(){return d}));var r=t(0),i=t.n(r);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var u=i.a.createContext({}),l=function(e){var n=i.a.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},s=function(e){var n=l(e.components);return i.a.createElement(u.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},m=i.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,o=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),s=l(t),m=r,d=s["".concat(o,".").concat(m)]||s[m]||b[m]||a;return t?i.a.createElement(d,c(c({ref:n},u),{},{components:t})):i.a.createElement(d,c({ref:n},u))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,o=new Array(a);o[0]=m;var c={};for(var p in n)hasOwnProperty.call(n,p)&&(c[p]=n[p]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var u=2;u<a;u++)o[u]=t[u];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"}}]);