(window.webpackJsonp=window.webpackJsonp||[]).push([[124],{184:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return a})),t.d(n,"metadata",(function(){return o})),t.d(n,"rightToc",(function(){return u})),t.d(n,"default",(function(){return l}));var r=t(2),i=(t(0),t(301));const a={title:"Additive Number"},o={unversionedId:"dfs/additive-number",id:"dfs/additive-number",isDocsHomePage:!1,title:"Additive Number",description:"\u63cf\u8ff0",source:"@site/docs/dfs/additive-number.md",slug:"/dfs/additive-number",permalink:"/dfs/additive-number",editUrl:"https://github.com/soulmachine/algorithm-essentials/edit/master/docs/dfs/additive-number.md",version:"current",sidebar:"someSidebar",previous:{title:"\u5c0f\u7ed3",permalink:"/bfs/bfs-summary"},next:{title:"Palindrome Partitioning",permalink:"/dfs/palindrome-partitioning"}},u=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",children:[]},{value:"\u5206\u6790",id:"\u5206\u6790",children:[]},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",children:[]}],c={rightToc:u};function l({components:e,...n}){return Object(i.b)("wrapper",Object(r.a)({},c,n,{components:e,mdxType:"MDXLayout"}),Object(i.b)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),Object(i.b)("p",null,"Additive number is a string whose digits can form additive sequence."),Object(i.b)("p",null,"A valid additive sequence should contain ",Object(i.b)("strong",{parentName:"p"},"at least")," three numbers. Except for the first two numbers, each subsequent number in the sequence must be the sum of the preceding two."),Object(i.b)("p",null,"For example:"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},'"112358"')," is an additive number because the digits can form an additive sequence: ",Object(i.b)("inlineCode",{parentName:"p"},"1, 1, 2, 3, 5, 8"),"."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),"1 + 1 = 2, 1 + 2 = 3, 2 + 3 = 5, 3 + 5 = 8\n")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},'"199100199"')," is also an additive number, the additive sequence is: ",Object(i.b)("inlineCode",{parentName:"p"},"1, 99, 100, 199"),"."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),"1 + 99 = 100, 99 + 100 = 199\n")),Object(i.b)("p",null,"Note: Numbers in the additive sequence cannot have leading zeros, so sequence ",Object(i.b)("inlineCode",{parentName:"p"},"1, 2, 03")," or ",Object(i.b)("inlineCode",{parentName:"p"},"1, 02, 3")," is invalid."),Object(i.b)("p",null,"Given a string containing only digits ",Object(i.b)("inlineCode",{parentName:"p"},"'0'-'9'"),", write a function to determine if it's an additive number."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Follow up"),":"),Object(i.b)("p",null,"How would you handle overflow for very large input integers?"),Object(i.b)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),Object(i.b)("p",null,"\u8fd9\u662f\u4e00\u4e2a\u591a\u9636\u6bb5\u51b3\u7b56\u95ee\u9898\uff0c\u4e14\u5fc5\u987b\u8d70\u5230\u5b57\u7b26\u4e32\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u624d\u80fd\u5f97\u51fa\u7ed3\u8bba\uff0c\u56e0\u6b64\u9002\u5408\u7528\u6df1\u641c\u6216DP\u3002"),Object(i.b)("p",null,"\u518d\u4ed4\u7ec6\u60f3\u4e00\u4e0b\u72b6\u6001\u8f6c\u6362\u56fe\uff0c\u6bcf\u6b21\u7d22\u5f15\u53d8\u5316\u4e00\u4e0b\uff0c\u5c31\u8ddf\u4e4b\u524d\u7684\u5b8c\u5168\u6ca1\u6709\u91cd\u590d\uff0c\u56e0\u6b64\u72b6\u6001\u8f6c\u6362\u56fe\u662f\u4e00\u9897\u6811\uff0c\u4e0d\u662fDAG\uff0c\u56e0\u6b64\u4e0d\u5b58\u5728\u91cd\u53e0\u5b50\u95ee\u9898\uff0c\u56e0\u6b64\u6392\u9664DP\uff0c\u672c\u9898\u5e94\u8be5\u7528\u6df1\u641c\u3002"),Object(i.b)("h3",{id:"\u4ee3\u7801"},"\u4ee3\u7801"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"// Additive Number\n// \u591a\u5165\u53e3\u6df1\u641c\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n^3)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(1)\npublic class Solution {\n    public boolean isAdditiveNumber(String num) {\n        for (int i = 1; i <= num.length() / 2; ++i) {\n            if (num.charAt(0) == '0' && i > 1) continue;\n            for (int j = i + 1; j < num.length(); ++j) {\n                if (num.charAt(i) == '0' && j - i > 1) continue;\n                if (dfs(num, 0, i, j)) return true;\n            }\n        }\n        return false;\n    }\n\n    // \u5224\u65ad\u4ece [i, j) \u548c [j, k) \u51fa\u53d1,\u80fd\u5426\u8d70\u5230\u5c3d\u5934\n    private static boolean dfs(String num, int i, int j, int k) {\n        long num1 = Long.parseLong(num.substring(i, j));\n        long num2 = Long.parseLong(num.substring(j, k));\n        final String addition = String.valueOf(num1 + num2);\n\n        if (!num.substring(k).startsWith(addition)) return false;\n        if (k + addition.length() == num.length()) return true;\n        return dfs(num, j, k, k + addition.length());\n    }\n}\n")))}l.isMDXComponent=!0},301:function(e,n,t){"use strict";t.d(n,"a",(function(){return b})),t.d(n,"b",(function(){return m}));var r=t(0),i=t.n(r);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function u(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=i.a.createContext({}),d=function(e){var n=i.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):u(u({},n),e)),t},b=function(e){var n=d(e.components);return i.a.createElement(l.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},p=i.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,o=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),b=d(t),p=r,m=b["".concat(o,".").concat(p)]||b[p]||s[p]||a;return t?i.a.createElement(m,u(u({ref:n},l),{},{components:t})):i.a.createElement(m,u({ref:n},l))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,o=new Array(a);o[0]=p;var u={};for(var c in n)hasOwnProperty.call(n,c)&&(u[c]=n[c]);u.originalType=e,u.mdxType="string"==typeof e?e:r,o[1]=u;for(var l=2;l<a;l++)o[l]=t[l];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,t)}p.displayName="MDXCreateElement"}}]);