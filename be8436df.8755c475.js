(window.webpackJsonp=window.webpackJsonp||[]).push([[201],{263:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return c})),t.d(n,"metadata",(function(){return o})),t.d(n,"rightToc",(function(){return l})),t.d(n,"default",(function(){return b}));var r=t(2),s=t(7),a=(t(0),t(327)),i=t(331),u=t(332),c={title:"Subsets II"},o={unversionedId:"brute-force/subsets-ii",id:"brute-force/subsets-ii",isDocsHomePage:!1,title:"Subsets II",description:"\u63cf\u8ff0",source:"@site/docs/brute-force/subsets-ii.md",slug:"/brute-force/subsets-ii",permalink:"/brute-force/subsets-ii",editUrl:"https://github.com/soulmachine/algorithm-essentials/edit/master/docs/brute-force/subsets-ii.md",version:"current",sidebar:"someSidebar",previous:{title:"Subsets",permalink:"/brute-force/subsets"},next:{title:"Permutations",permalink:"/brute-force/permutations"}},l=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",children:[]},{value:"\u5206\u6790",id:"\u5206\u6790",children:[]},{value:"\u9012\u5f52",id:"\u9012\u5f52",children:[]},{value:"\u8fed\u4ee3",id:"\u8fed\u4ee3",children:[]},{value:"\u76f8\u5173\u9898\u76ee",id:"\u76f8\u5173\u9898\u76ee",children:[]}],p={rightToc:l};function b(e){var n=e.components,t=Object(s.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},p,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),Object(a.b)("p",null,"Given a collection of integers that might contain duplicates, ",Object(a.b)("inlineCode",{parentName:"p"},"S"),", return all possible subsets."),Object(a.b)("p",null,"Note:"),Object(a.b)("p",null,"Elements in a subset must be in non-descending order.\nThe solution set must not contain duplicate subsets.\nFor example,\nIf ",Object(a.b)("inlineCode",{parentName:"p"},"S = [1,2,2]"),", a solution is:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{}),"[\n  [2],\n  [1],\n  [1,2,2],\n  [2,2],\n  [1,2],\n  []\n]\n")),Object(a.b)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),Object(a.b)("p",null,"\u8fd9\u9898\u6709\u91cd\u590d\u5143\u7d20\uff0c\u4f46\u672c\u8d28\u4e0a\uff0c\u8ddf\u4e0a\u4e00\u9898\u5f88\u7c7b\u4f3c\uff0c\u4e0a\u4e00\u9898\u4e2d\u5143\u7d20\u6ca1\u6709\u91cd\u590d\uff0c\u76f8\u5f53\u4e8e\u6bcf\u4e2a\u5143\u7d20\u53ea\u80fd\u9009 0 \u6216 1 \u6b21\uff0c\u8fd9\u91cc\u6269\u5145\u5230\u4e86\u6bcf\u4e2a\u5143\u7d20\u53ef\u4ee5\u9009 0 \u5230\u82e5\u5e72\u6b21\u800c\u5df2\u3002"),Object(a.b)("h3",{id:"\u9012\u5f52"},"\u9012\u5f52"),Object(a.b)("h4",{id:"\u589e\u91cf\u6784\u9020\u6cd5"},"\u589e\u91cf\u6784\u9020\u6cd5"),Object(a.b)(i.a,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},Object(a.b)(u.a,{value:"java",mdxType:"TabItem"},Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"// Subsets II\n// \u589e\u91cf\u6784\u9020\u6cd5\uff0c\u7248\u672c1\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(2^n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n)\npublic class Solution {\n    public List<List<Integer>> subsetsWithDup(int[] nums) {\n        Arrays.sort(nums);  // \u5fc5\u987b\u6392\u5e8f\n\n        List<List<Integer>> result = new ArrayList<>();\n        List<Integer> path = new ArrayList<>();\n\n        dfs(nums, 0, path, result);\n        return result;\n    }\n\n    private static void dfs(int[] nums, int start, List<Integer> path,\n                            List<List<Integer>> result) {\n        result.add(new ArrayList<Integer>(path));\n\n        for (int i = start; i < nums.length; i++) {\n            if (i != start && nums[i] == nums[i-1]) continue;\n            path.add(nums[i]);\n            dfs(nums, i + 1, path, result);\n            path.remove(path.size() - 1);\n        }\n    }\n}\n"))),Object(a.b)(u.a,{value:"cpp",mdxType:"TabItem"},Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-cpp"}),"// Subsets II\n// \u589e\u91cf\u6784\u9020\u6cd5\uff0c\u7248\u672c1\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(2^n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n)\nclass Solution {\npublic:\n    vector<vector<int> > subsetsWithDup(vector<int> &S) {\n        sort(S.begin(), S.end());  // \u5fc5\u987b\u6392\u5e8f\n\n        vector<vector<int> > result;\n        vector<int> path;\n\n        dfs(S, S.begin(), path, result);\n        return result;\n    }\n\nprivate:\n    static void dfs(const vector<int> &S, vector<int>::iterator start,\n            vector<int> &path, vector<vector<int> > &result) {\n        result.push_back(path);\n\n        for (auto i = start; i < S.end(); i++) {\n            if (i != start && *i == *(i-1)) continue;\n            path.push_back(*i);\n            dfs(S, i + 1, path, result);\n            path.pop_back();\n        }\n    }\n};\n")))),Object(a.b)("p",null,"\u589e\u91cf\u6784\u9020\u6cd5\uff0c\u7248\u672c 2"),Object(a.b)(i.a,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},Object(a.b)(u.a,{value:"java",mdxType:"TabItem"},Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"// Subsets II\n// \u589e\u91cf\u6784\u9020\u6cd5\uff0c\u7248\u672c2\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(2^n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n)\npublic class Solution {\n    public List<List<Integer>> subsetsWithDup(int[] nums) {\n        Arrays.sort(nums);  // \u5fc5\u987b\u6392\u5e8f\n        List<List<Integer>> result = new ArrayList<>();\n        List<Integer> path = new ArrayList<>(); // \u4e2d\u95f4\u7ed3\u679c\n\n        // \u8bb0\u5f55\u6bcf\u4e2a\u5143\u7d20\u7684\u51fa\u73b0\u6b21\u6570\n        HashMap<Integer, Integer> counterMap = new HashMap<>();\n        for (int i : nums) {\n            counterMap.put(i, counterMap.getOrDefault(i, 0) + 1);\n        }\n        // \u5c06HashMap\u91cc\u7684pair\u62f7\u8d1d\u5230\u4e00\u4e2a\u6570\u7ec4\u91cc\n        Pair[] counters = new Pair[counterMap.size()];\n        int i = 0;\n        for (Map.Entry<Integer, Integer> entry : counterMap.entrySet()) {\n            counters[i++] = new Pair(entry.getKey(), entry.getValue());\n        }\n        Arrays.sort(counters);\n\n        dfs(counters, 0, path, result);\n        return result;\n    }\n\n    private static void dfs(Pair[] counters, int step, List<Integer> path,\n                        List<List<Integer>> result) {\n        if (step == counters.length) {\n            result.add(new ArrayList<>(path));\n            return;\n        }\n\n        for (int i = 0; i <= counters[step].value; i++) {\n            for (int j = 0; j < i; ++j) {\n                path.add(counters[step].key);\n            }\n            dfs(counters, step + 1, path, result);\n            for (int j = 0; j < i; ++j) {\n                path.remove(path.size() - 1);\n            }\n        }\n    }\n\n    static class Pair implements Comparable<Pair> {\n        int key;\n        int value;\n        public Pair(int key, int value) {\n            this.key = key;\n            this.value = value;\n        }\n        @Override\n        public int compareTo(Pair o) {\n            if (this.key < o.key) return -1;\n            else if (this.key > o.key) return 1;\n            else {\n                return this.value - o.value;\n            }\n        }\n    }\n}\n"))),Object(a.b)(u.a,{value:"cpp",mdxType:"TabItem"},Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-cpp"}),"// Subsets II\n// \u589e\u91cf\u6784\u9020\u6cd5\uff0c\u7248\u672c2\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(2^n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n)\nclass Solution {\npublic:\n    vector<vector<int> > subsetsWithDup(vector<int> &nums) {\n        vector<vector<int> > result;\n        sort(nums.begin(), nums.end()); // \u5fc5\u987b\u6392\u5e8f\n\n        unordered_map<int, int> count_map; // \u8bb0\u5f55\u6bcf\u4e2a\u5143\u7d20\u7684\u51fa\u73b0\u6b21\u6570\n        for (int i : nums) {\n            if (count_map.find(i) != count_map.end())\n                count_map[i]++;\n            else\n                count_map[i] = 1;\n        }\n\n        // \u5c06map\u91cc\u7684pair\u62f7\u8d1d\u5230\u4e00\u4e2avector\u91cc\n        vector<pair<int, int> > elems;\n        for (auto p : count_map) {\n            elems.push_back(p);\n        }\n        sort(elems.begin(), elems.end());\n        vector<int> path; // \u4e2d\u95f4\u7ed3\u679c\n\n        dfs(elems, 0, path, result);\n        return result;\n    }\n\nprivate:\n    static void dfs(const vector<pair<int, int> > &elems,\n            size_t step, vector<int> &path, vector<vector<int> > &result) {\n        if (step == elems.size()) {\n            result.push_back(path);\n            return;\n        }\n\n        for (int i = 0; i <= elems[step].second; i++) {\n            for (int j = 0; j < i; ++j) {\n                path.push_back(elems[step].first);\n            }\n            dfs(elems, step + 1, path, result);\n            for (int j = 0; j < i; ++j) {\n                path.pop_back();\n            }\n        }\n    }\n};\n")))),Object(a.b)("h4",{id:"\u4f4d\u5411\u91cf\u6cd5"},"\u4f4d\u5411\u91cf\u6cd5"),Object(a.b)(i.a,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},Object(a.b)(u.a,{value:"java",mdxType:"TabItem"},Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"// Subsets II\n// \u4f4d\u5411\u91cf\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(2^n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n)\npublic class Solution {\n    public List<List<Integer>> subsetsWithDup(int[] nums) {\n        Arrays.sort(nums);  // \u5fc5\u987b\u6392\u5e8f\n        List<List<Integer>> result = new ArrayList<>();\n        // \u8bb0\u5f55\u6bcf\u4e2a\u5143\u7d20\u7684\u51fa\u73b0\u6b21\u6570\n        HashMap<Integer, Integer> counterMap = new HashMap<>();\n        for (int i : nums) {\n            counterMap.put(i, counterMap.getOrDefault(i, 0) + 1);\n        }\n        // \u5c06HashMap\u91cc\u7684pair\u62f7\u8d1d\u5230\u4e00\u4e2a\u6570\u7ec4\u91cc\n        Pair[] counters = new Pair[counterMap.size()];\n        int i = 0;\n        for (Map.Entry<Integer, Integer> entry : counterMap.entrySet()) {\n            counters[i++] = new Pair(entry.getKey(), entry.getValue());\n        }\n        Arrays.sort(counters);\n\n        // \u6bcf\u4e2a\u5143\u7d20\u9009\u62e9\u4e86\u591a\u5c11\u4e2a\n        HashMap<Integer, Integer> selected = new HashMap<>();\n        for (Pair p : counters) {\n            selected.put(p.key, 0 );\n        }\n\n        dfs(nums, counters, selected, 0, result);\n        return result;\n    }\n\n    private static void dfs(int[] nums, Pair[] counters, HashMap<Integer, Integer> selected,\n                            int step, List<List<Integer>> result) {\n        if (step == counters.length) {\n            ArrayList<Integer> subset = new ArrayList<>();\n            for (Pair p : counters) {\n                for (int i = 0; i < selected.get(p.key); ++i) {\n                    subset.add(p.key);\n                }\n            }\n            result.add(subset);\n            return;\n        }\n\n        for (int i = 0; i <= counters[step].value; i++) {\n            selected.put(counters[step].key, i);\n            dfs(nums, counters, selected, step + 1, result);\n        }\n    }\n    static class Pair implements Comparable<Pair> {\n        int key;\n        int value;\n        public Pair(int key, int value) {\n            this.key = key;\n            this.value = value;\n        }\n\n        @Override\n        public int compareTo(Pair o) {\n            if (this.key < o.key) return -1;\n            else if (this.key > o.key) return 1;\n            else {\n                return this.value - o.value;\n            }\n        }\n    }\n}\n"))),Object(a.b)(u.a,{value:"cpp",mdxType:"TabItem"},Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-cpp"}),"// Subsets II\n// \u4f4d\u5411\u91cf\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(2^n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n)\nclass Solution {\npublic:\n    vector<vector<int> > subsetsWithDup(vector<int> &nums) {\n        vector<vector<int> > result; // \u5fc5\u987b\u6392\u5e8f\n        sort(nums.begin(), nums.end());\n        // \u8bb0\u5f55\u6bcf\u4e2a\u5143\u7d20\u7684\u51fa\u73b0\u6b21\u6570\n        unordered_map<int, int> count_map;\n        for (int i : nums) {\n            if (count_map.find(i) != count_map.end())\n                count_map[i]++;\n            else\n                count_map[i] = 1;\n        }\n        // \u5c06map\u91cc\u7684pair\u62f7\u8d1d\u5230\u4e00\u4e2avector\u91cc\n        vector<pair<int, int> > counters;\n        for (auto p : count_map) {\n            counters.push_back(p);\n        }\n        sort(counters.begin(), counters.end());\n\n        // \u6bcf\u4e2a\u5143\u7d20\u9009\u62e9\u4e86\u591a\u5c11\u4e2a\n        unordered_map<int, int> selected;\n        for (auto p : counters) {\n            selected[p.first] = 0;\n        }\n\n        dfs(nums, counters, selected, 0, result);\n        return result;\n    }\n\nprivate:\n    static void dfs(const vector<int> &S, const vector<pair<int, int> >& counters,\n            unordered_map<int, int>& selected, size_t step, vector<vector<int> > &result) {\n        if (step == counters.size()) {\n            vector<int> subset;\n            for (auto p : counters) {\n                for (int i = 0; i < selected[p.first]; ++i) {\n                    subset.push_back(p.first);\n                }\n            }\n            result.push_back(subset);\n            return;\n        }\n\n        for (int i = 0; i <= counters[step].second; i++) {\n            selected[counters[step].first] = i;\n            dfs(S, counters, selected, step + 1, result);\n        }\n    }\n};\n")))),Object(a.b)("h3",{id:"\u8fed\u4ee3"},"\u8fed\u4ee3"),Object(a.b)("h4",{id:"\u589e\u91cf\u6784\u9020\u6cd5-1"},"\u589e\u91cf\u6784\u9020\u6cd5"),Object(a.b)(i.a,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},Object(a.b)(u.a,{value:"java",mdxType:"TabItem"},Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"// Subsets II\n// \u589e\u91cf\u6784\u9020\u6cd5\n// \u65f6\u95f4\u590d\u6742\u5ea6O(2^n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(1)\npublic class Solution {\n    public List<List<Integer>> subsetsWithDup(int[] nums) {\n        Arrays.sort(nums);  // \u5fc5\u987b\u6392\u5e8f\n        List<List<Integer>> result = new ArrayList<>();\n        result.add(new ArrayList<Integer>());\n\n        int previous_size = 0;\n        for (int i = 0; i < nums.length; ++i) {\n            final int size = result.size();\n            for (int j = 0; j < size; ++j) {\n                if (i == 0 || nums[i] != nums[i-1] || j >= previous_size) {\n                    result.add(new ArrayList<>(result.get(j)));\n                    result.get(result.size() - 1).add(nums[i]);\n                }\n            }\n            previous_size = size;\n        }\n        return result;\n    }\n}\n"))),Object(a.b)(u.a,{value:"cpp",mdxType:"TabItem"},Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-cpp"}),"// Subsets II\n// \u589e\u91cf\u6784\u9020\u6cd5\n// \u65f6\u95f4\u590d\u6742\u5ea6O(2^n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(1)\nclass Solution {\npublic:\n    vector<vector<int> > subsetsWithDup(vector<int> &S) {\n        sort(S.begin(), S.end()); // \u5fc5\u987b\u6392\u5e8f\n        vector<vector<int> > result(1);\n\n        size_t previous_size = 0;\n        for (size_t i = 0; i < S.size(); ++i) {\n            const size_t size = result.size();\n            for (size_t j = 0; j < size; ++j) {\n                if (i == 0 || S[i] != S[i-1] || j >= previous_size) {\n                    result.push_back(result[j]);\n                    result.back().push_back(S[i]);\n                }\n            }\n            previous_size = size;\n        }\n        return result;\n    }\n};\n")))),Object(a.b)("h4",{id:"\u4e8c\u8fdb\u5236\u6cd5"},"\u4e8c\u8fdb\u5236\u6cd5"),Object(a.b)(i.a,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},Object(a.b)(u.a,{value:"java",mdxType:"TabItem"},Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"// Subsets II\n// \u4e8c\u8fdb\u5236\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(2^n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(1)\npublic class Solution {\n    public List<List<Integer>> subsetsWithDup(int[] nums) {\n        Arrays.sort(nums);  // \u5fc5\u987b\u6392\u5e8f\n        // \u7528 set \u53bb\u91cd\uff0c\u4e0d\u80fd\u7528 unordered_set\uff0c\u56e0\u4e3a\u8f93\u51fa\u8981\u6c42\u6709\u5e8f\n        LinkedHashSet<ArrayList<Integer>> result = new LinkedHashSet<>();\n        final int n = nums.length;\n        ArrayList<Integer> v = new ArrayList<>();\n\n        for (int i = 0; i < 1 << n; ++i) {\n            for (int j = 0; j < n; ++j) {\n                if ((i & 1 << j) > 0)\n                    v.add(nums[j]);\n            }\n            result.add(new ArrayList<>(v));\n            v.clear();\n        }\n        List<List<Integer>> realResult = new ArrayList<>();\n        for (ArrayList<Integer> list : result) {\n            realResult.add(list);\n        }\n        return realResult;\n    }\n}\n"))),Object(a.b)(u.a,{value:"cpp",mdxType:"TabItem"},Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-cpp"}),"// Subsets II\n// \u4e8c\u8fdb\u5236\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(2^n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(1)\nclass Solution {\npublic:\n    vector<vector<int> > subsetsWithDup(vector<int> &S) {\n        sort(S.begin(), S.end()); // \u5fc5\u987b\u6392\u5e8f\n        // \u7528 set \u53bb\u91cd\uff0c\u4e0d\u80fd\u7528 unordered_set\uff0c\u56e0\u4e3a\u8f93\u51fa\u8981\u6c42\u6709\u5e8f\n        set<vector<int> > result;\n        const size_t n = S.size();\n        vector<int> v;\n\n        for (size_t i = 0; i < 1U << n; ++i) {\n            for (size_t j = 0; j < n; ++j) {\n                if (i & 1 << j)\n                    v.push_back(S[j]);\n            }\n            result.insert(v);\n            v.clear();\n        }\n        vector<vector<int> > real_result;\n        copy(result.begin(), result.end(), back_inserter(real_result));\n        return real_result;\n    }\n};\n")))),Object(a.b)("h3",{id:"\u76f8\u5173\u9898\u76ee"},"\u76f8\u5173\u9898\u76ee"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object(r.a)({parentName:"li"},{href:"/brute-force/subsets"}),"Subsets"))))}b.isMDXComponent=!0},327:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return v}));var r=t(0),s=t.n(r);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function u(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,s=function(e,n){if(null==e)return{};var t,r,s={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var o=s.a.createContext({}),l=function(e){var n=s.a.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):u(u({},n),e)),t},p=function(e){var n=l(e.components);return s.a.createElement(o.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return s.a.createElement(s.a.Fragment,{},n)}},d=s.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,o=c(e,["components","mdxType","originalType","parentName"]),p=l(t),d=r,v=p["".concat(i,".").concat(d)]||p[d]||b[d]||a;return t?s.a.createElement(v,u(u({ref:n},o),{},{components:t})):s.a.createElement(v,u({ref:n},o))}));function v(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,i=new Array(a);i[0]=d;var u={};for(var c in n)hasOwnProperty.call(n,c)&&(u[c]=n[c]);u.originalType=e,u.mdxType="string"==typeof e?e:r,i[1]=u;for(var o=2;o<a;o++)i[o]=t[o];return s.a.createElement.apply(null,i)}return s.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},328:function(e,n,t){"use strict";function r(e){var n,t,s="";if("string"==typeof e||"number"==typeof e)s+=e;else if("object"==typeof e)if(Array.isArray(e))for(n=0;n<e.length;n++)e[n]&&(t=r(e[n]))&&(s&&(s+=" "),s+=t);else for(n in e)e[n]&&(s&&(s+=" "),s+=n);return s}n.a=function(){for(var e,n,t=0,s="";t<arguments.length;)(e=arguments[t++])&&(n=r(e))&&(s&&(s+=" "),s+=n);return s}},329:function(e,n,t){"use strict";var r=t(0),s=t(330);n.a=function(){var e=Object(r.useContext)(s.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},330:function(e,n,t){"use strict";var r=t(0),s=Object(r.createContext)(void 0);n.a=s},331:function(e,n,t){"use strict";var r=t(0),s=t.n(r),a=t(329),i=t(328),u=t(49),c=t.n(u),o=37,l=39;n.a=function(e){var n=e.block,t=e.children,u=e.defaultValue,p=e.values,b=e.groupId,d=e.className,v=Object(a.a)(),m=v.tabGroupChoices,f=v.setTabGroupChoices,j=Object(r.useState)(u),O=j[0],y=j[1],h=Object(r.useState)(!1),g=h[0],I=h[1];if(null!=b){var w=m[b];null!=w&&w!==O&&p.some((function(e){return e.value===w}))&&y(w)}var S=function(e){y(e),null!=b&&f(b,e)},L=[],_=function(e){e.metaKey||e.altKey||e.ctrlKey||I(!0)},k=function(){I(!1)};return Object(r.useEffect)((function(){return window.addEventListener("keydown",_),window.addEventListener("mousedown",k),function(){window.removeEventListener("keydown",_),window.removeEventListener("mousedown",k)}}),[]),s.a.createElement("div",null,s.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(i.a)("tabs",{"tabs--block":n},d)},p.map((function(e){var n=e.value,t=e.label;return s.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":O===n,className:Object(i.a)("tabs__item",c.a.tabItem,{"tabs__item--active":O===n}),style:g?{}:{outline:"none"},key:n,ref:function(e){return L.push(e)},onKeyDown:function(e){!function(e,n,t){switch(t.keyCode){case l:!function(e,n){var t=e.indexOf(n)+1;e[t]?e[t].focus():e[0].focus()}(e,n);break;case o:!function(e,n){var t=e.indexOf(n)-1;e[t]?e[t].focus():e[e.length-1].focus()}(e,n)}}(L,e.target,e),_(e)},onFocus:function(){return S(n)},onClick:function(){S(n),I(!1)},onPointerDown:function(){return I(!1)}},t)}))),s.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},r.Children.toArray(t).filter((function(e){return e.props.value===O}))[0]))}},332:function(e,n,t){"use strict";var r=t(0),s=t.n(r);n.a=function(e){return s.a.createElement("div",null,e.children)}}}]);