(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{329:function(n,e,t){"use strict";t.d(e,"a",(function(){return m})),t.d(e,"b",(function(){return b}));var i=t(0),r=t.n(i);function a(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function c(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,i)}return t}function u(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?c(Object(t),!0).forEach((function(e){a(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function o(n,e){if(null==n)return{};var t,i,r=function(n,e){if(null==n)return{};var t,i,r={},a=Object.keys(n);for(i=0;i<a.length;i++)t=a[i],e.indexOf(t)>=0||(r[t]=n[t]);return r}(n,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);for(i=0;i<a.length;i++)t=a[i],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(r[t]=n[t])}return r}var l=r.a.createContext({}),f=function(n){var e=r.a.useContext(l),t=e;return n&&(t="function"==typeof n?n(e):u(u({},e),n)),t},m=function(n){var e=f(n.components);return r.a.createElement(l.Provider,{value:e},n.children)},s={inlineCode:"code",wrapper:function(n){var e=n.children;return r.a.createElement(r.a.Fragment,{},e)}},d=r.a.forwardRef((function(n,e){var t=n.components,i=n.mdxType,a=n.originalType,c=n.parentName,l=o(n,["components","mdxType","originalType","parentName"]),m=f(t),d=i,b=m["".concat(c,".").concat(d)]||m[d]||s[d]||a;return t?r.a.createElement(b,u(u({ref:e},l),{},{components:t})):r.a.createElement(b,u({ref:e},l))}));function b(n,e){var t=arguments,i=e&&e.mdxType;if("string"==typeof n||i){var a=t.length,c=new Array(a);c[0]=d;var u={};for(var o in e)hasOwnProperty.call(e,o)&&(u[o]=e[o]);u.originalType=n,u.mdxType="string"==typeof n?n:i,c[1]=u;for(var l=2;l<a;l++)c[l]=t[l];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},330:function(n,e,t){"use strict";function i(n){var e,t,r="";if("string"==typeof n||"number"==typeof n)r+=n;else if("object"==typeof n)if(Array.isArray(n))for(e=0;e<n.length;e++)n[e]&&(t=i(n[e]))&&(r&&(r+=" "),r+=t);else for(e in n)n[e]&&(r&&(r+=" "),r+=e);return r}e.a=function(){for(var n,e,t=0,r="";t<arguments.length;)(n=arguments[t++])&&(e=i(n))&&(r&&(r+=" "),r+=e);return r}},331:function(n,e,t){"use strict";var i=t(0),r=t(332);e.a=function(){var n=Object(i.useContext)(r.a);if(null==n)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return n}},332:function(n,e,t){"use strict";var i=t(0),r=Object(i.createContext)(void 0);e.a=r},333:function(n,e,t){"use strict";var i=t(0),r=t.n(i),a=t(331),c=t(330),u=t(49),o=t.n(u),l=37,f=39;e.a=function(n){var e=n.block,t=n.children,u=n.defaultValue,m=n.values,s=n.groupId,d=n.className,b=Object(a.a)(),p=b.tabGroupChoices,j=b.setTabGroupChoices,g=Object(i.useState)(u),v=g[0],O=g[1],h=Object(i.useState)(!1),y=h[0],x=h[1];if(null!=s){var w=p[s];null!=w&&w!==v&&m.some((function(n){return n.value===w}))&&O(w)}var N=function(n){O(n),null!=s&&j(s,n)},T=[],P=function(n){n.metaKey||n.altKey||n.ctrlKey||x(!0)},S=function(){x(!1)};return Object(i.useEffect)((function(){return window.addEventListener("keydown",P),window.addEventListener("mousedown",S),function(){window.removeEventListener("keydown",P),window.removeEventListener("mousedown",S)}}),[]),r.a.createElement("div",null,r.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(c.a)("tabs",{"tabs--block":e},d)},m.map((function(n){var e=n.value,t=n.label;return r.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":v===e,className:Object(c.a)("tabs__item",o.a.tabItem,{"tabs__item--active":v===e}),style:y?{}:{outline:"none"},key:e,ref:function(n){return T.push(n)},onKeyDown:function(n){!function(n,e,t){switch(t.keyCode){case f:!function(n,e){var t=n.indexOf(e)+1;n[t]?n[t].focus():n[0].focus()}(n,e);break;case l:!function(n,e){var t=n.indexOf(e)-1;n[t]?n[t].focus():n[n.length-1].focus()}(n,e)}}(T,n.target,n),P(n)},onFocus:function(){return N(e)},onClick:function(){N(e),x(!1)},onPointerDown:function(){return x(!1)}},t)}))),r.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},i.Children.toArray(t).filter((function(n){return n.props.value===v}))[0]))}},334:function(n,e,t){"use strict";var i=t(0),r=t.n(i);e.a=function(n){return r.a.createElement("div",null,n.children)}},84:function(n,e,t){"use strict";t.r(e),t.d(e,"frontMatter",(function(){return o})),t.d(e,"metadata",(function(){return l})),t.d(e,"rightToc",(function(){return f})),t.d(e,"default",(function(){return s}));var i=t(2),r=t(7),a=(t(0),t(329)),c=t(333),u=t(334),o={title:"Minimum Path Sum"},l={unversionedId:"dp/minimum-path-sum",id:"dp/minimum-path-sum",isDocsHomePage:!1,title:"Minimum Path Sum",description:"\u63cf\u8ff0",source:"@site/docs/dp/minimum-path-sum.md",slug:"/dp/minimum-path-sum",permalink:"/dp/minimum-path-sum",editUrl:"https://github.com/soulmachine/algorithm-essentials/edit/master/docs/dp/minimum-path-sum.md",version:"current",sidebar:"someSidebar",previous:{title:"Scramble String",permalink:"/dp/scramble-string"},next:{title:"Edit Distance",permalink:"/dp/edit-distance"}},f=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",children:[]},{value:"\u5206\u6790",id:"\u5206\u6790",children:[]},{value:"\u5907\u5fd8\u5f55\u6cd5",id:"\u5907\u5fd8\u5f55\u6cd5",children:[]},{value:"\u52a8\u89c4",id:"\u52a8\u89c4",children:[]},{value:"\u52a8\u89c4+\u6eda\u52a8\u6570\u7ec4",id:"\u52a8\u89c4\u6eda\u52a8\u6570\u7ec4",children:[]},{value:"\u76f8\u5173\u9898\u76ee",id:"\u76f8\u5173\u9898\u76ee",children:[]}],m={rightToc:f};function s(n){var e=n.components,t=Object(r.a)(n,["components"]);return Object(a.b)("wrapper",Object(i.a)({},m,t,{components:e,mdxType:"MDXLayout"}),Object(a.b)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),Object(a.b)("p",null,"Given a ",Object(a.b)("inlineCode",{parentName:"p"},"m \xd7 n")," grid filled with non-negative numbers, find a path from top left to bottom right which minimizes the sum of all numbers along its path."),Object(a.b)("p",null,"Note: You can only move either down or right at any point in time"),Object(a.b)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),Object(a.b)("p",null,"\u8ddf\u7b2c ??? \u8282 ",Object(a.b)("a",Object(i.a)({parentName:"p"},{href:"/dfs/unique-paths"}),"Unique Paths")," \u5f88\u7c7b\u4f3c\u3002"),Object(a.b)("p",null,"\u8bbe\u72b6\u6001\u4e3a",Object(a.b)("inlineCode",{parentName:"p"},"f[i][j]"),"\uff0c\u8868\u793a\u4ece\u8d77\u70b9",Object(a.b)("inlineCode",{parentName:"p"},"(0,0)"),"\u5230\u8fbe",Object(a.b)("inlineCode",{parentName:"p"},"(i,j)"),"\u7684\u6700\u5c0f\u8def\u5f84\u548c\uff0c\u5219\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3a\uff1a"),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{}),"f[i][j]=min(f[i-1][j], f[i][j-1])+grid[i][j]\n")),Object(a.b)("h3",{id:"\u5907\u5fd8\u5f55\u6cd5"},"\u5907\u5fd8\u5f55\u6cd5"),Object(a.b)(c.a,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},Object(a.b)(u.a,{value:"java",mdxType:"TabItem"},Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-java"}),"// Minimum Path Sum\n// \u5907\u5fd8\u5f55\u6cd5\npublic class Solution {\n    public int minPathSum(int[][] grid) {\n        final int m = grid.length;\n        final int n = grid[0].length;\n        this.f = new int[m][n];\n        for (int i = 0; i < m; ++i) Arrays.fill(f[i], -1);\n        return dfs(grid, m-1, n-1);\n    }\n\n    private int dfs(int[][] grid, int x, int y) {\n        if (x < 0 || y < 0) return Integer.MAX_VALUE; // \u8d8a\u754c\uff0c\u7ec8\u6b62\u6761\u4ef6\uff0c\u6ce8\u610f\uff0c\u4e0d\u662f0\n\n        if (x == 0 && y == 0) return grid[0][0]; // \u56de\u5230\u8d77\u70b9\uff0c\u6536\u655b\u6761\u4ef6\n\n        return Math.min(getOrUpdate(grid, x - 1, y),\n                getOrUpdate(grid, x, y - 1)) + grid[x][y];\n    }\n\n    private int getOrUpdate(int[][] grid, int x, int y) {\n        if (x < 0 || y < 0) return Integer.MAX_VALUE; // \u8d8a\u754c\uff0c\u6ce8\u610f\uff0c\u4e0d\u662f0\n        if (f[x][y] >= 0) return f[x][y];\n        else return f[x][y] = dfs(grid, x, y);\n    }\n    private int[][] f;  // \u7f13\u5b58\n}\n"))),Object(a.b)(u.a,{value:"cpp",mdxType:"TabItem"},Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-cpp"}),"// Minimum Path Sum\n// \u5907\u5fd8\u5f55\u6cd5\nclass Solution {\npublic:\n    int minPathSum(vector<vector<int> > &grid) {\n        const int m = grid.size();\n        const int n = grid[0].size();\n        this->f = vector<vector<int> >(m, vector<int>(n, -1));\n        return dfs(grid, m-1, n-1);\n    }\nprivate:\n    vector<vector<int> > f;  // \u7f13\u5b58\n\n    int dfs(const vector<vector<int> > &grid, int x, int y) {\n        if (x < 0 || y < 0) return INT_MAX; // \u8d8a\u754c\uff0c\u7ec8\u6b62\u6761\u4ef6\uff0c\u6ce8\u610f\uff0c\u4e0d\u662f0\n\n        if (x == 0 && y == 0) return grid[0][0]; // \u56de\u5230\u8d77\u70b9\uff0c\u6536\u655b\u6761\u4ef6\n\n        return min(getOrUpdate(grid, x - 1, y),\n                getOrUpdate(grid, x, y - 1)) + grid[x][y];\n    }\n\n    int getOrUpdate(const vector<vector<int> > &grid, int x, int y) {\n        if (x < 0 || y < 0) return INT_MAX; // \u8d8a\u754c\uff0c\u6ce8\u610f\uff0c\u4e0d\u662f0\n        if (f[x][y] >= 0) return f[x][y];\n        else return f[x][y] = dfs(grid, x, y);\n    }\n};\n")))),Object(a.b)("h3",{id:"\u52a8\u89c4"},"\u52a8\u89c4"),Object(a.b)(c.a,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},Object(a.b)(u.a,{value:"java",mdxType:"TabItem"},Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-java"}),"// Minimum Path Sum\n// \u4e8c\u7ef4\u52a8\u89c4\npublic class Solution {\n    public int minPathSum(int[][] grid) {\n        final int m = grid.length;\n        final int n = grid[0].length;\n        if (m == 0) return 0;\n\n        int[][] f = new int[m][n];\n        f[0][0] = grid[0][0];\n        for (int i = 1; i < m; i++) {\n            f[i][0] = f[i - 1][0] + grid[i][0];\n        }\n        for (int i = 1; i < n; i++) {\n            f[0][i] = f[0][i - 1] + grid[0][i];\n        }\n\n        for (int i = 1; i < m; i++) {\n            for (int j = 1; j < n; j++) {\n                f[i][j] = Math.min(f[i - 1][j], f[i][j - 1]) + grid[i][j];\n            }\n        }\n        return f[m - 1][n - 1];\n    }\n}\n"))),Object(a.b)(u.a,{value:"cpp",mdxType:"TabItem"},Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-cpp"}),"// Minimum Path Sum\n// \u4e8c\u7ef4\u52a8\u89c4\nclass Solution {\npublic:\n    int minPathSum(vector<vector<int> > &grid) {\n        if (grid.size() == 0) return 0;\n        const int m = grid.size();\n        const int n = grid[0].size();\n\n        int f[m][n];\n        f[0][0] = grid[0][0];\n        for (int i = 1; i < m; i++) {\n            f[i][0] = f[i - 1][0] + grid[i][0];\n        }\n        for (int i = 1; i < n; i++) {\n            f[0][i] = f[0][i - 1] + grid[0][i];\n        }\n\n        for (int i = 1; i < m; i++) {\n            for (int j = 1; j < n; j++) {\n                f[i][j] = min(f[i - 1][j], f[i][j - 1]) + grid[i][j];\n            }\n        }\n        return f[m - 1][n - 1];\n    }\n};\n")))),Object(a.b)("h3",{id:"\u52a8\u89c4\u6eda\u52a8\u6570\u7ec4"},"\u52a8\u89c4+\u6eda\u52a8\u6570\u7ec4"),Object(a.b)(c.a,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},Object(a.b)(u.a,{value:"java",mdxType:"TabItem"},Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-java"}),"// Minimum Path Sum\n// \u4e8c\u7ef4\u52a8\u89c4+\u6eda\u52a8\u6570\u7ec4\npublic class Solution {\n    public int minPathSum(int[][] grid) {\n        final int m = grid.length;\n        final int n = grid[0].length;\n\n        int[] f = new int[n];\n        Arrays.fill(f, Integer.MAX_VALUE); // \u521d\u59cb\u503c\u662f INT_MAX\uff0c\u56e0\u4e3a\u540e\u9762\u7528\u4e86min\u51fd\u6570\u3002\n        f[0] = 0;\n\n        for (int i = 0; i < m; i++) {\n            f[0] += grid[i][0];\n            for (int j = 1; j < n; j++) {\n                // \u5de6\u8fb9\u7684f[j]\uff0c\u8868\u793a\u66f4\u65b0\u540e\u7684f[j]\uff0c\u4e0e\u516c\u5f0f\u4e2d\u7684f[i[[j]\u5bf9\u5e94\n                // \u53f3\u8fb9\u7684f[j]\uff0c\u8868\u793a\u8001\u7684f[j]\uff0c\u4e0e\u516c\u5f0f\u4e2d\u7684f[i-1][j]\u5bf9\u5e94\n                f[j] = Math.min(f[j - 1], f[j]) + grid[i][j];\n            }\n        }\n        return f[n - 1];\n    }\n}\n"))),Object(a.b)(u.a,{value:"cpp",mdxType:"TabItem"},Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-cpp"}),"// Minimum Path Sum\n// \u4e8c\u7ef4\u52a8\u89c4+\u6eda\u52a8\u6570\u7ec4\nclass Solution {\npublic:\n    int minPathSum(vector<vector<int> > &grid) {\n        const int m = grid.size();\n        const int n = grid[0].size();\n\n        int f[n];\n        fill(f, f+n, INT_MAX); // \u521d\u59cb\u503c\u662f INT_MAX\uff0c\u56e0\u4e3a\u540e\u9762\u7528\u4e86min\u51fd\u6570\u3002\n        f[0] = 0;\n\n        for (int i = 0; i < m; i++) {\n            f[0] += grid[i][0];\n            for (int j = 1; j < n; j++) {\n                // \u5de6\u8fb9\u7684f[j]\uff0c\u8868\u793a\u66f4\u65b0\u540e\u7684f[j]\uff0c\u4e0e\u516c\u5f0f\u4e2d\u7684f[i[[j]\u5bf9\u5e94\n                // \u53f3\u8fb9\u7684f[j]\uff0c\u8868\u793a\u8001\u7684f[j]\uff0c\u4e0e\u516c\u5f0f\u4e2d\u7684f[i-1][j]\u5bf9\u5e94\n                f[j] = min(f[j - 1], f[j]) + grid[i][j];\n            }\n        }\n        return f[n - 1];\n    }\n};\n")))),Object(a.b)("h3",{id:"\u76f8\u5173\u9898\u76ee"},"\u76f8\u5173\u9898\u76ee"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object(i.a)({parentName:"li"},{href:"/dfs/unique-paths"}),"Unique Paths")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object(i.a)({parentName:"li"},{href:"/dfs/unique-paths-ii"}),"Unique Paths II"))))}s.isMDXComponent=!0}}]);