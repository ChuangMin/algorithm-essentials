(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{108:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return b}));var r=n(2),a=n(6),i=(n(0),n(298)),o=n(302),u=n(303),c={title:"Permutations II"},s={unversionedId:"brute-force/permutations-ii",id:"brute-force/permutations-ii",isDocsHomePage:!1,title:"Permutations II",description:"\u63cf\u8ff0",source:"@site/docs/brute-force/permutations-ii.md",slug:"/brute-force/permutations-ii",permalink:"/algorithm-essentials/brute-force/permutations-ii",editUrl:"https://github.com/soulmachine/algorithm-essentials/edit/master/docs/brute-force/permutations-ii.md",version:"current",sidebar:"someSidebar",previous:{title:"Permutations",permalink:"/algorithm-essentials/brute-force/permutations"},next:{title:"Combinations",permalink:"/algorithm-essentials/brute-force/combinations"}},l=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",children:[]},{value:"next_permutation()",id:"next_permutation",children:[]},{value:"\u91cd\u65b0\u5b9e\u73b0 next_permutation()",id:"\u91cd\u65b0\u5b9e\u73b0-next_permutation",children:[]},{value:"\u9012\u5f52",id:"\u9012\u5f52",children:[]},{value:"\u76f8\u5173\u9898\u76ee",id:"\u76f8\u5173\u9898\u76ee",children:[]}],p={rightToc:l};function b(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),Object(i.b)("p",null,"Given a collection of numbers that might contain duplicates, return all possible unique permutations."),Object(i.b)("p",null,"For example,\n",Object(i.b)("inlineCode",{parentName:"p"},"[1,1,2]")," have the following unique permutations:\n",Object(i.b)("inlineCode",{parentName:"p"},"[1,1,2], [1,2,1]"),", and ",Object(i.b)("inlineCode",{parentName:"p"},"[2,1,1]"),"."),Object(i.b)("h3",{id:"next_permutation"},"next_permutation()"),Object(i.b)("p",null,"\u76f4\u63a5\u4f7f\u7528",Object(i.b)("inlineCode",{parentName:"p"},"std::next_permutation()"),"\uff0c\u4ee3\u7801\u4e0e\u4e0a\u4e00\u9898\u76f8\u540c\u3002"),Object(i.b)("h3",{id:"\u91cd\u65b0\u5b9e\u73b0-next_permutation"},"\u91cd\u65b0\u5b9e\u73b0 next_permutation()"),Object(i.b)("p",null,"\u91cd\u65b0\u5b9e\u73b0",Object(i.b)("inlineCode",{parentName:"p"},"std::next_permutation()"),"\uff0c\u4ee3\u7801\u4e0e\u4e0a\u4e00\u9898\u76f8\u540c\u3002"),Object(i.b)("h3",{id:"\u9012\u5f52"},"\u9012\u5f52"),Object(i.b)("p",null,"\u9012\u5f52\u51fd\u6570",Object(i.b)("inlineCode",{parentName:"p"},"permute()"),"\u7684\u53c2\u6570",Object(i.b)("inlineCode",{parentName:"p"},"p"),"\uff0c\u662f\u4e2d\u95f4\u7ed3\u679c\uff0c\u5b83\u7684\u957f\u5ea6\u53c8\u80fd\u6807\u8bb0\u5f53\u524d\u8d70\u5230\u4e86\u54ea\u4e00\u6b65\uff0c\u7528\u4e8e\u5224\u65ad\u6536\u655b\u6761\u4ef6\u3002"),Object(i.b)("p",null,"\u6269\u5c55\u8282\u70b9\uff0c\u6bcf\u6b21\u4ece\u5c0f\u5230\u5927\uff0c\u9009\u4e00\u4e2a\u6ca1\u6709\u88ab\u7528\u5149\u7684\u5143\u7d20\uff0c\u76f4\u5230\u6240\u6709\u5143\u7d20\u88ab\u7528\u5149\u3002"),Object(i.b)("p",null,"\u672c\u9898\u4e0d\u9700\u8981\u5224\u91cd\uff0c\u56e0\u4e3a\u72b6\u6001\u88c5\u6362\u56fe\u662f\u4e00\u9897\u6709\u5c42\u6b21\u7684\u6811\u3002"),Object(i.b)(o.a,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},Object(i.b)(u.a,{value:"java",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"// Permutations II\n// \u6df1\u641c\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(n!)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n)\npublic class Solution {\n    public List<List<Integer>> permuteUnique(int[] nums) {\n        Arrays.sort(nums);  // \u5fc5\u987b\u6392\u5e8f\n        List<List<Integer>> result = new ArrayList<>(); // \u6700\u7ec8\u7ed3\u679c\n        List<Integer> path = new ArrayList<>(); // \u4e2d\u95f4\u7ed3\u679c\n\n        // \u8bb0\u5f55\u6bcf\u4e2a\u5143\u7d20\u7684\u51fa\u73b0\u6b21\u6570\n        HashMap<Integer, Integer> counterMap = new HashMap<>();\n        for (int i : nums) {\n            counterMap.put(i, counterMap.getOrDefault(i, 0) + 1);\n        }\n        // \u5c06HashMap\u91cc\u7684pair\u62f7\u8d1d\u5230\u4e00\u4e2a\u6570\u7ec4\u91cc\n        Pair[] counters = new Pair[counterMap.size()];\n        int i = 0;\n        for (Map.Entry<Integer, Integer> entry : counterMap.entrySet()) {\n            counters[i++] = new Pair(entry.getKey(), entry.getValue());\n        }\n        Arrays.sort(counters);\n\n        // \u6bcf\u4e2a\u5143\u7d20\u9009\u62e9\u4e86\u591a\u5c11\u4e2a\n        HashMap<Integer, Integer> selected = new HashMap<>();\n        for (Pair p : counters) {\n            selected.put(p.key, 0 );\n        }\n\n        n = nums.length;\n        permute(counters, selected, path, result);\n        return result;\n    }\n\n    private int n;\n\n    void permute(Pair[] counters, HashMap<Integer,Integer> selected,\n                 List<Integer> path, List<List<Integer>> result) {\n        if (n == path.size()) {  // \u6536\u655b\u6761\u4ef6\n            result.add(new ArrayList<>(path));\n        }\n\n        // \u6269\u5c55\u72b6\u6001\n        for (Pair counter : counters) {\n            if (selected.get(counter.key) < counter.value) {\n                path.add(counter.key);\n                selected.put(counter.key, selected.get(counter.key) + 1);\n                permute(counters, selected, path, result);\n                path.remove(path.size() - 1);\n                selected.put(counter.key, selected.get(counter.key) - 1);\n            }\n        }\n    }\n    static class Pair implements Comparable<Pair> {\n        int key;\n        int value;\n        public Pair(int key, int value) {\n            this.key = key;\n            this.value = value;\n        }\n\n        @Override\n        public int compareTo(Pair o) {\n            if (this.key < o.key) return -1;\n            else if (this.key > o.key) return 1;\n            else {\n                return this.value - o.value;\n            }\n        }\n    }\n}\n"))),Object(i.b)(u.a,{value:"cpp",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-cpp"}),"// Permutations II\n// \u6df1\u641c\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(n!)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n)\nclass Solution {\npublic:\n    vector<vector<int> > permuteUnique(vector<int>& nums) {\n        sort(nums.begin(), nums.end());\n\n        unordered_map<int, int> count_map; // \u8bb0\u5f55\u6bcf\u4e2a\u5143\u7d20\u7684\u51fa\u73b0\u6b21\u6570\n        for (int i : nums) {\n            if (count_map.find(i) != count_map.end())\n                count_map[i]++;\n            else\n                count_map[i] = 1;\n        }\n\n        // \u5c06map\u91cc\u7684pair\u62f7\u8d1d\u5230\u4e00\u4e2avector\u91cc\n        vector<pair<int, int> > counters;\n        for (auto p : count_map) {\n            counters.push_back(p);\n        }\n        sort(counters.begin(), counters.end());\n\n        // \u6bcf\u4e2a\u5143\u7d20\u9009\u62e9\u4e86\u591a\u5c11\u4e2a\n        unordered_map<int, int> selected;\n        for (auto p : counters) {\n            selected[p.first] = 0;\n        }\n\n        vector<vector<int>> result; // \u6700\u7ec8\u7ed3\u679c\n        vector<int> p;  // \u4e2d\u95f4\u7ed3\u679c\n\n        n = nums.size();\n        permute(counters, selected, p, result);\n        return result;\n    }\n\nprivate:\n    size_t n;\n    typedef vector<pair<int, int> >::const_iterator Iter;\n\n    void permute(const vector<pair<int, int> > &counters,\n            unordered_map<int, int> &selected,\n            vector<int> &p, vector<vector<int> > &result) {\n        if (n == p.size()) {  // \u6536\u655b\u6761\u4ef6\n            result.push_back(p);\n        }\n\n        // \u6269\u5c55\u72b6\u6001\n        for (auto counter : counters) {\n            if (selected[counter.first] < counter.second) {\n                p.push_back(counter.first);\n                selected[counter.first]++;\n                permute(counters, selected, p, result);\n                p.pop_back(); // \u64a4\u9500\u52a8\u4f5c\uff0c\u8fd4\u56de\u4e0a\u4e00\u5c42\n                selected[counter.first]--;\n            }\n        }\n    }\n};\n")))),Object(i.b)("h3",{id:"\u76f8\u5173\u9898\u76ee"},"\u76f8\u5173\u9898\u76ee"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"/algorithm-essentials/linear-list/array/next-permutation"}),"Next Permutation")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"/algorithm-essentials/linear-list/array/permutation-sequence"}),"Permutation Sequence")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"/algorithm-essentials/brute-force/permutations"}),"Permutations")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"/algorithm-essentials/brute-force/combinations"}),"Combinations"))))}b.isMDXComponent=!0},298:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return f}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function u(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),l=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):u(u({},t),e)),n},p=function(e){var t=l(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=l(n),m=r,f=p["".concat(o,".").concat(m)]||p[m]||b[m]||i;return n?a.a.createElement(f,u(u({ref:t},s),{},{components:n})):a.a.createElement(f,u({ref:t},s))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var u={};for(var c in t)hasOwnProperty.call(t,c)&&(u[c]=t[c]);u.originalType=e,u.mdxType="string"==typeof e?e:r,o[1]=u;for(var s=2;s<i;s++)o[s]=n[s];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},299:function(e,t,n){"use strict";function r(e){var t,n,a="";if("string"==typeof e||"number"==typeof e)a+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=r(e[t]))&&(a&&(a+=" "),a+=n);else for(t in e)e[t]&&(a&&(a+=" "),a+=t);return a}t.a=function(){for(var e,t,n=0,a="";n<arguments.length;)(e=arguments[n++])&&(t=r(e))&&(a&&(a+=" "),a+=t);return a}},300:function(e,t,n){"use strict";var r=n(0),a=Object(r.createContext)(void 0);t.a=a},301:function(e,t,n){"use strict";var r=n(0),a=n(300);t.a=function(){var e=Object(r.useContext)(a.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},302:function(e,t,n){"use strict";var r=n(0),a=n.n(r),i=n(301),o=n(299),u=n(47),c=n.n(u),s=37,l=39;t.a=function(e){var t=e.block,n=e.children,u=e.defaultValue,p=e.values,b=e.groupId,m=Object(i.a)(),f=m.tabGroupChoices,d=m.setTabGroupChoices,v=Object(r.useState)(u),O=v[0],y=v[1],h=Object(r.useState)(!1),j=h[0],g=h[1];if(null!=b){var w=f[b];null!=w&&w!==O&&p.some((function(e){return e.value===w}))&&y(w)}var P=function(e){y(e),null!=b&&d(b,e)},k=[],x=function(e){e.metaKey||e.altKey||e.ctrlKey||g(!0)},I=function(){g(!1)};return Object(r.useEffect)((function(){window.addEventListener("keydown",x),window.addEventListener("mousedown",I)}),[]),a.a.createElement("div",null,a.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(o.a)("tabs",{"tabs--block":t})},p.map((function(e){var t=e.value,n=e.label;return a.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":O===t,className:Object(o.a)("tabs__item",c.a.tabItem,{"tabs__item--active":O===t}),style:j?{}:{outline:"none"},key:t,ref:function(e){return k.push(e)},onKeyDown:function(e){!function(e,t,n){switch(n.keyCode){case l:!function(e,t){var n=e.indexOf(t)+1;e[n]?e[n].focus():e[0].focus()}(e,t);break;case s:!function(e,t){var n=e.indexOf(t)-1;e[n]?e[n].focus():e[e.length-1].focus()}(e,t)}}(k,e.target,e),x(e)},onFocus:function(){return P(t)},onClick:function(){P(t),g(!1)},onPointerDown:function(){return g(!1)}},n)}))),a.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},r.Children.toArray(n).filter((function(e){return e.props.value===O}))[0]))}},303:function(e,t,n){"use strict";var r=n(0),a=n.n(r);t.a=function(e){return a.a.createElement("div",null,e.children)}}}]);