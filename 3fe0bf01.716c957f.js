(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{127:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return c})),t.d(n,"metadata",(function(){return s})),t.d(n,"rightToc",(function(){return l})),t.d(n,"default",(function(){return d}));var r=t(2),a=t(6),i=(t(0),t(298)),o=t(302),u=t(303),c={title:"Unique Binary Search Trees II"},s={unversionedId:"binary-tree/bst/unique-binary-search-trees-ii",id:"binary-tree/bst/unique-binary-search-trees-ii",isDocsHomePage:!1,title:"Unique Binary Search Trees II",description:"\u63cf\u8ff0",source:"@site/docs/binary-tree/bst/unique-binary-search-trees-ii.md",slug:"/binary-tree/bst/unique-binary-search-trees-ii",permalink:"/binary-tree/bst/unique-binary-search-trees-ii",editUrl:"https://github.com/soulmachine/algorithm-essentials/edit/master/docs/binary-tree/bst/unique-binary-search-trees-ii.md",version:"current",sidebar:"someSidebar",previous:{title:"Unique Binary Search Trees",permalink:"/binary-tree/bst/unique-binary-search-trees"},next:{title:"Validate Binary Search Tree",permalink:"/binary-tree/bst/validate-binary-search-tree"}},l=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",children:[]},{value:"\u5206\u6790",id:"\u5206\u6790",children:[]},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",children:[]},{value:"\u76f8\u5173\u9898\u76ee",id:"\u76f8\u5173\u9898\u76ee",children:[]}],b={rightToc:l};function d(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},b,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),Object(i.b)("p",null,"Given ",Object(i.b)("inlineCode",{parentName:"p"},"n"),", generate all structurally unique BST's (binary search trees) that store values 1...n."),Object(i.b)("p",null,"For example,\nGiven ",Object(i.b)("inlineCode",{parentName:"p"},"n = 3"),", your program should return all 5 unique BST's shown below."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),"   1         3     3      2      1\n    \\       /     /      / \\      \\\n     3     2     1      1   3      2\n    /     /       \\                 \\\n   2     1         2                 3\n")),Object(i.b)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),Object(i.b)("p",null,"\u89c1\u524d\u9762\u4e00\u9898\u3002"),Object(i.b)("h3",{id:"\u4ee3\u7801"},"\u4ee3\u7801"),Object(i.b)(o.a,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},Object(i.b)(u.a,{value:"java",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"// Unique Binary Search Trees II\n// \u65f6\u95f4\u590d\u6742\u5ea6TODO\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6TODO\npublic class Solution {\n    public List<TreeNode> generateTrees(int n) {\n        if (n == 0) return new ArrayList<>();\n        return generate(1, n);\n    }\n    private static List<TreeNode > generate(int start, int end) {\n        List<TreeNode> subTree = new ArrayList<>();\n        if (start > end) {\n            subTree.add(null);\n            return subTree;\n        }\n        for (int k = start; k <= end; k++) {\n            List<TreeNode> leftSubs = generate(start, k - 1);\n            List<TreeNode> rightSubs = generate(k + 1, end);\n            for (TreeNode i : leftSubs) {\n                for (TreeNode j : rightSubs) {\n                    TreeNode node = new TreeNode(k);\n                    node.left = i;\n                    node.right = j;\n                    subTree.add(node);\n                }\n            }\n        }\n        return subTree;\n    }\n}\n"))),Object(i.b)(u.a,{value:"cpp",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-cpp"}),"// Unique Binary Search Trees II\n// \u65f6\u95f4\u590d\u6742\u5ea6TODO\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6TODO\nclass Solution {\npublic:\n    vector<TreeNode *> generateTrees(int n) {\n        if (n == 0) return vector<TreeNode*>();\n        return generate(1, n);\n    }\nprivate:\n    vector<TreeNode *> generate(int start, int end) {\n        vector<TreeNode*> subTree;\n        if (start > end) {\n            subTree.push_back(nullptr);\n            return subTree;\n        }\n        for (int k = start; k <= end; k++) {\n            vector<TreeNode*> leftSubs = generate(start, k - 1);\n            vector<TreeNode*> rightSubs = generate(k + 1, end);\n            for (auto i : leftSubs) {\n                for (auto j : rightSubs) {\n                    TreeNode *node = new TreeNode(k);\n                    node->left = i;\n                    node->right = j;\n                    subTree.push_back(node);\n                }\n            }\n        }\n        return subTree;\n    }\n};\n")))),Object(i.b)("h3",{id:"\u76f8\u5173\u9898\u76ee"},"\u76f8\u5173\u9898\u76ee"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"/binary-tree/bst/unique-binary-search-trees"}),"Unique Binary Search Trees"))))}d.isMDXComponent=!0},298:function(e,n,t){"use strict";t.d(n,"a",(function(){return b})),t.d(n,"b",(function(){return p}));var r=t(0),a=t.n(r);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function u(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=a.a.createContext({}),l=function(e){var n=a.a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):u(u({},n),e)),t},b=function(e){var n=l(e.components);return a.a.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},f=a.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),b=l(t),f=r,p=b["".concat(o,".").concat(f)]||b[f]||d[f]||i;return t?a.a.createElement(p,u(u({ref:n},s),{},{components:t})):a.a.createElement(p,u({ref:n},s))}));function p(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=f;var u={};for(var c in n)hasOwnProperty.call(n,c)&&(u[c]=n[c]);u.originalType=e,u.mdxType="string"==typeof e?e:r,o[1]=u;for(var s=2;s<i;s++)o[s]=t[s];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,t)}f.displayName="MDXCreateElement"},299:function(e,n,t){"use strict";function r(e){var n,t,a="";if("string"==typeof e||"number"==typeof e)a+=e;else if("object"==typeof e)if(Array.isArray(e))for(n=0;n<e.length;n++)e[n]&&(t=r(e[n]))&&(a&&(a+=" "),a+=t);else for(n in e)e[n]&&(a&&(a+=" "),a+=n);return a}n.a=function(){for(var e,n,t=0,a="";t<arguments.length;)(e=arguments[t++])&&(n=r(e))&&(a&&(a+=" "),a+=n);return a}},300:function(e,n,t){"use strict";var r=t(0),a=Object(r.createContext)(void 0);n.a=a},301:function(e,n,t){"use strict";var r=t(0),a=t(300);n.a=function(){var e=Object(r.useContext)(a.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},302:function(e,n,t){"use strict";var r=t(0),a=t.n(r),i=t(301),o=t(299),u=t(47),c=t.n(u),s=37,l=39;n.a=function(e){var n=e.block,t=e.children,u=e.defaultValue,b=e.values,d=e.groupId,f=Object(i.a)(),p=f.tabGroupChoices,y=f.setTabGroupChoices,m=Object(r.useState)(u),v=m[0],O=m[1],h=Object(r.useState)(!1),j=h[0],T=h[1];if(null!=d){var g=p[d];null!=g&&g!==v&&b.some((function(e){return e.value===g}))&&O(g)}var w=function(e){O(e),null!=d&&y(d,e)},N=[],k=function(e){e.metaKey||e.altKey||e.ctrlKey||T(!0)},S=function(){T(!1)};return Object(r.useEffect)((function(){window.addEventListener("keydown",k),window.addEventListener("mousedown",S)}),[]),a.a.createElement("div",null,a.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(o.a)("tabs",{"tabs--block":n})},b.map((function(e){var n=e.value,t=e.label;return a.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":v===n,className:Object(o.a)("tabs__item",c.a.tabItem,{"tabs__item--active":v===n}),style:j?{}:{outline:"none"},key:n,ref:function(e){return N.push(e)},onKeyDown:function(e){!function(e,n,t){switch(t.keyCode){case l:!function(e,n){var t=e.indexOf(n)+1;e[t]?e[t].focus():e[0].focus()}(e,n);break;case s:!function(e,n){var t=e.indexOf(n)-1;e[t]?e[t].focus():e[e.length-1].focus()}(e,n)}}(N,e.target,e),k(e)},onFocus:function(){return w(n)},onClick:function(){w(n),T(!1)},onPointerDown:function(){return T(!1)}},t)}))),a.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},r.Children.toArray(t).filter((function(e){return e.props.value===v}))[0]))}},303:function(e,n,t){"use strict";var r=t(0),a=t.n(r);n.a=function(e){return a.a.createElement("div",null,e.children)}}}]);