(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{117:function(e,r,n){"use strict";n.r(r),n.d(r,"frontMatter",(function(){return c})),n.d(r,"metadata",(function(){return u})),n.d(r,"rightToc",(function(){return s})),n.d(r,"default",(function(){return b}));var t=n(2),a=n(6),i=(n(0),n(298)),o=n(302),l=n(303),c={title:"Binary Tree Inorder Traversal"},u={unversionedId:"binary-tree/traversal/binary-tree-inorder-traversal",id:"binary-tree/traversal/binary-tree-inorder-traversal",isDocsHomePage:!1,title:"Binary Tree Inorder Traversal",description:"\u63cf\u8ff0",source:"@site/docs/binary-tree/traversal/binary-tree-inorder-traversal.md",slug:"/binary-tree/traversal/binary-tree-inorder-traversal",permalink:"/algorithm-essentials/binary-tree/traversal/binary-tree-inorder-traversal",editUrl:"https://github.com/soulmachine/algorithm-essentials/edit/master/docs/binary-tree/traversal/binary-tree-inorder-traversal.md",version:"current",sidebar:"someSidebar",previous:{title:"Binary Tree Preorder Traversal",permalink:"/algorithm-essentials/binary-tree/traversal/binary-tree-preorder-traversal"},next:{title:"Binary Tree Postorder Traversal",permalink:"/algorithm-essentials/binary-tree/traversal/binary-tree-postorder-traversal"}},s=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",children:[]},{value:"\u5206\u6790",id:"\u5206\u6790",children:[]},{value:"\u6808",id:"\u6808",children:[]},{value:"Morris \u4e2d\u5e8f\u904d\u5386",id:"morris-\u4e2d\u5e8f\u904d\u5386",children:[]},{value:"\u76f8\u5173\u9898\u76ee",id:"\u76f8\u5173\u9898\u76ee",children:[]}],p={rightToc:s};function b(e){var r=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(t.a)({},p,n,{components:r,mdxType:"MDXLayout"}),Object(i.b)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),Object(i.b)("p",null,"Given a binary tree, return the ",Object(i.b)("strong",{parentName:"p"},"inorder")," traversal of its nodes' values."),Object(i.b)("p",null,"For example:"),Object(i.b)("p",null,"Given binary tree ",Object(i.b)("inlineCode",{parentName:"p"},"{1,#,2,3}"),","),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{})," 1\n  \\\n   2\n  /\n 3\n")),Object(i.b)("p",null,"return ",Object(i.b)("inlineCode",{parentName:"p"},"[1,3,2]"),"."),Object(i.b)("p",null,"Note: Recursive solution is trivial, could you do it iteratively?"),Object(i.b)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),Object(i.b)("p",null,"\u7528\u6808\u6216\u8005 Morris \u904d\u5386\u3002"),Object(i.b)("h3",{id:"\u6808"},"\u6808"),Object(i.b)(o.a,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},Object(i.b)(l.a,{value:"java",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-java"}),"// Binary Tree Inorder Traversal\n// \u4f7f\u7528\u6808\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n)\nclass Solution {\n    public List<Integer> inorderTraversal(TreeNode root) {\n        ArrayList<Integer> result = new ArrayList<>();\n        Stack<TreeNode> s = new Stack<>();\n        TreeNode p = root;\n\n        while (!s.empty() || p != null) {\n            if (p != null) {\n                s.push(p);\n                p = p.left;\n            } else {\n                p = s.pop();\n                result.add(p.val);\n                p = p.right;\n            }\n        }\n        return result;\n    }\n}\n"))),Object(i.b)(l.a,{value:"cpp",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-cpp"}),"// Binary Tree Inorder Traversal\n// \u4f7f\u7528\u6808\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n)\nclass Solution {\npublic:\n    vector<int> inorderTraversal(TreeNode *root) {\n        vector<int> result;\n        stack<const TreeNode *> s;\n        const TreeNode *p = root;\n\n        while (!s.empty() || p != nullptr) {\n            if (p != nullptr) {\n                s.push(p);\n                p = p->left;\n            } else {\n                p = s.top();\n                s.pop();\n                result.push_back(p->val);\n                p = p->right;\n            }\n        }\n        return result;\n    }\n};\n")))),Object(i.b)("h3",{id:"morris-\u4e2d\u5e8f\u904d\u5386"},"Morris \u4e2d\u5e8f\u904d\u5386"),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-cpp"}),"// Binary Tree Inorder Traversal\n// Morris\u4e2d\u5e8f\u904d\u5386\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(1)\nclass Solution {\npublic:\n    vector<int> inorderTraversal(TreeNode *root) {\n        vector<int> result;\n        TreeNode *cur = root, *prev = nullptr;\n\n        while (cur != nullptr) {\n            if (cur->left == nullptr) {\n                result.push_back(cur->val);\n                prev = cur;\n                cur = cur->right;\n            } else {\n                /* \u67e5\u627e\u524d\u9a71 */\n                TreeNode *node = cur->left;\n                while (node->right != nullptr && node->right != cur)\n                    node = node->right;\n\n                if (node->right == nullptr) { /* \u8fd8\u6ca1\u7ebf\u7d22\u5316\uff0c\u5219\u5efa\u7acb\u7ebf\u7d22 */\n                    node->right = cur;\n                    /* prev = cur; \u4e0d\u80fd\u6709\u8fd9\u53e5\uff0ccur\u8fd8\u6ca1\u6709\u88ab\u8bbf\u95ee */\n                    cur = cur->left;\n                } else {    /* \u5df2\u7ecf\u7ebf\u7d22\u5316\uff0c\u5219\u8bbf\u95ee\u8282\u70b9\uff0c\u5e76\u5220\u9664\u7ebf\u7d22  */\n                    result.push_back(cur->val);\n                    node->right = nullptr;\n                    prev = cur;\n                    cur = cur->right;\n                }\n            }\n        }\n        return result;\n    }\n};\n")),Object(i.b)("h3",{id:"\u76f8\u5173\u9898\u76ee"},"\u76f8\u5173\u9898\u76ee"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(t.a)({parentName:"li"},{href:"/algorithm-essentials/binary-tree/traversal/binary-tree-preorder-traversal"}),"Binary Tree Preorder Traversal")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(t.a)({parentName:"li"},{href:"/algorithm-essentials/binary-tree/traversal/binary-tree-postorder-traversal"}),"Binary Tree Postorder Traversal")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(t.a)({parentName:"li"},{href:"/algorithm-essentials/binary-tree/traversal/recover-binary-search-tree"}),"Recover Binary Search Tree"))))}b.isMDXComponent=!0},298:function(e,r,n){"use strict";n.d(r,"a",(function(){return p})),n.d(r,"b",(function(){return v}));var t=n(0),a=n.n(t);function i(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function o(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function l(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?o(Object(n),!0).forEach((function(r){i(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function c(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=a.a.createContext({}),s=function(e){var r=a.a.useContext(u),n=r;return e&&(n="function"==typeof e?e(r):l(l({},r),e)),n},p=function(e){var r=s(e.components);return a.a.createElement(u.Provider,{value:r},e.children)},b={inlineCode:"code",wrapper:function(e){var r=e.children;return a.a.createElement(a.a.Fragment,{},r)}},d=a.a.forwardRef((function(e,r){var n=e.components,t=e.mdxType,i=e.originalType,o=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=s(n),d=t,v=p["".concat(o,".").concat(d)]||p[d]||b[d]||i;return n?a.a.createElement(v,l(l({ref:r},u),{},{components:n})):a.a.createElement(v,l({ref:r},u))}));function v(e,r){var n=arguments,t=r&&r.mdxType;if("string"==typeof e||t){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var c in r)hasOwnProperty.call(r,c)&&(l[c]=r[c]);l.originalType=e,l.mdxType="string"==typeof e?e:t,o[1]=l;for(var u=2;u<i;u++)o[u]=n[u];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},299:function(e,r,n){"use strict";function t(e){var r,n,a="";if("string"==typeof e||"number"==typeof e)a+=e;else if("object"==typeof e)if(Array.isArray(e))for(r=0;r<e.length;r++)e[r]&&(n=t(e[r]))&&(a&&(a+=" "),a+=n);else for(r in e)e[r]&&(a&&(a+=" "),a+=r);return a}r.a=function(){for(var e,r,n=0,a="";n<arguments.length;)(e=arguments[n++])&&(r=t(e))&&(a&&(a+=" "),a+=r);return a}},300:function(e,r,n){"use strict";var t=n(0),a=Object(t.createContext)(void 0);r.a=a},301:function(e,r,n){"use strict";var t=n(0),a=n(300);r.a=function(){var e=Object(t.useContext)(a.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},302:function(e,r,n){"use strict";var t=n(0),a=n.n(t),i=n(301),o=n(299),l=n(47),c=n.n(l),u=37,s=39;r.a=function(e){var r=e.block,n=e.children,l=e.defaultValue,p=e.values,b=e.groupId,d=Object(i.a)(),v=d.tabGroupChoices,f=d.setTabGroupChoices,m=Object(t.useState)(l),y=m[0],O=m[1],j=Object(t.useState)(!1),h=j[0],g=j[1];if(null!=b){var T=v[b];null!=T&&T!==y&&p.some((function(e){return e.value===T}))&&O(T)}var w=function(e){O(e),null!=b&&f(b,e)},N=[],k=function(e){e.metaKey||e.altKey||e.ctrlKey||g(!0)},x=function(){g(!1)};return Object(t.useEffect)((function(){window.addEventListener("keydown",k),window.addEventListener("mousedown",x)}),[]),a.a.createElement("div",null,a.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(o.a)("tabs",{"tabs--block":r})},p.map((function(e){var r=e.value,n=e.label;return a.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":y===r,className:Object(o.a)("tabs__item",c.a.tabItem,{"tabs__item--active":y===r}),style:h?{}:{outline:"none"},key:r,ref:function(e){return N.push(e)},onKeyDown:function(e){!function(e,r,n){switch(n.keyCode){case s:!function(e,r){var n=e.indexOf(r)+1;e[n]?e[n].focus():e[0].focus()}(e,r);break;case u:!function(e,r){var n=e.indexOf(r)-1;e[n]?e[n].focus():e[e.length-1].focus()}(e,r)}}(N,e.target,e),k(e)},onFocus:function(){return w(r)},onClick:function(){w(r),g(!1)},onPointerDown:function(){return g(!1)}},n)}))),a.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},t.Children.toArray(n).filter((function(e){return e.props.value===y}))[0]))}},303:function(e,r,n){"use strict";var t=n(0),a=n.n(t);r.a=function(e){return a.a.createElement("div",null,e.children)}}}]);